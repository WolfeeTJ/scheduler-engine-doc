<?xml version="1.0"?>
<!-- $Id: Log.xml 13568 2008-05-26 08:04:35Z jz $ -->

<?xml-stylesheet href="api-default_language.xsl" type="text/xsl"?>


<api.class
    name        = "Log"
    object_name = "spooler_log"
    base_dir    = "../"
    author      = "$Author: jz $"
    date        = "$Date: 2008-05-26 10:04:35 +0200 (Mon, 26 May 2008) $"
>


<method name="log">
    <com>
        <com.parameter name="level">
            <com.type type="int"/>
        </com.parameter>

        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>
</method>


<method name="error">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Fehlermeldung (Level 1)
    </title>
    
    <description>
        <p>
            Wenn die Fehlermeldung ins Task-Protokoll (<scheduler_method class="Job_impl" property="spooler_log"/>) geschrieben wird
            und nicht <scheduler_element name="job" attribute="stop_on_error" value="no"/> eingestellt ist,
            stoppt der Job nach Ende der Task.
        </p>
    </description>
</method>


<method name="warn">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Warnung (Level 2)
    </title>
</method>


<method name="info">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Informationsmeldung (Level 0)
    </title>
</method>


<method name="debug">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -1)
    </title>
</method>


<method name="debug1">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -1)
    </title>
</method>


<method name="debug2">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -2)
    </title>
</method>


<method name="debug3">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -3)
    </title>
</method>


<method name="debug4">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -4)
    </title>
</method>


<method name="debug5">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -5)
    </title>
</method>


<method name="debug6">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -6)
    </title>
</method>


<method name="debug7">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -7)
    </title>
</method>


<method name="debug8">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -8)
    </title>
</method>


<method name="debug9">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug-Meldung (Level -9)
    </title>
</method>


<method name="log_file">
    <com>
        <com.parameter name="path">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <java>
        <java.parameter name="path">
            <java.type type="java.io.File"/>
        </java.parameter>
    </java>

    <java>
        <java.parameter name="path">
            <com.type type="BSTR"/>
        </java.parameter>
    </java>

    <title>
        Protokolliert den Inhalt der Datei
    </title>

    <description>
        <p>
            Protokolliert den Inhalt der Datei mit Level 0 (info).
            Ein Fehler beim Zugriff auf die Datei wird als Warnung protokolliert.
        </p>
        <p>
            Bei Ausführung auf einem entfernten Rechner mit <scheduler_element name="process_class" attribute="remote_scheduler"/>
            wird die Datei vom Dateisystem des Schedulers, nicht der Task, gelesen.
        </p>
    </description>
</method>


<property name="mail">
    <com>
        <com.result>
            <com.type class="Mail"/>
        </com.result>
    </com>

    <title>
        Im <code>Mail</code>-Objekt können Sie Einstellungen zur eMail vornehmen
    </title>
</property>


<property name="mail_on_error" setting="mail_on_error">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>
</property>


<property name="mail_on_warning" setting="mail_on_warning">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>
</property>


<property name="mail_on_success" setting="mail_on_success">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>
</property>


<property name="mail_on_process" setting="mail_on_process">
    <com>
        <com.result>
            <com.type type="int"/>
        </com.result>
    </com>
</property>


<property name="level" setting="log_level" title="Schwelle für Protokollausgaben">
    <com>
        <com.result>
            <com.type type="int"/>
        </com.result>
    </com>

    <description>
        <p>
            Nur Meldungen ab dem Level werden ausgegeben.
        </p>
        <p>
            Dabei bedeutet die numerische Angabe:
        </p>
        <div style="margin-top: 1ex; margin-left: 4ex">
            <table cellspacing="0" cellpadding="0">
                <tr>
                    <td style="padding-right: 1ex">-9 bis -2:</td>
                    <td>
                        <code>debug9</code> bis <code>debug2</code>
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">-1:</td>
                    <td>
                        <code>debug</code>
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">0:</td>
                    <td>
                        <code>info</code>
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">1:</td>
                    <td>
                        <code>warn</code>
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">2:</td>
                    <td>
                        <code>error</code>
                    </td>
                </tr>
            </table>
        </div>
    </description>
</property>



<property name="filename" access="read">
    <com>
        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <title>
        Dateiname des Protokolls
    </title>
</property>



<property name="new_filename">
    <com>
        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <title>
        Neuer Dateiname fürs Protokoll
    </title>

    <description>
        Setzt den Dateinamen fürs Protokoll.
        Wenn das Protokoll geschlossen wird, kopiert der Scheduler es in diese Datei.
        Die Datei steht dann der Anwendung zur Verfügung.
    </description>
</property>


<!--
<property name="collect_within">
    <com>
        <com.result>
            <com.type type="VARIANT"/>
        </com.result>
    </com>
</property>


<property name="collect_max">
    <com>
        <com.result>
            <com.type type="VARIANT"/>
        </com.result>
    </com>
</property>
-->


<property name="mail_it" access="write">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>

    <title>
        Versand erzwingen
    </title>

    <description>
        <p>
            Bei <code>true</code> wird das Protokoll bei Task-Ende
            verschickt unabhängig von den Einstellungen
            <scheduler_method class="Log" property="mail_on_error"/>,
            <scheduler_method class="Log" property="mail_on_warning"/>,
            <scheduler_method class="Log" property="mail_on_success"/>,
            <scheduler_method class="Log" property="mail_on_process"/> und
            <scheduler_method class="Log" property="mail_on_error"/>.
        </p>
    </description>
</property>


<property name="last_error_line" access="read">
    <com>
        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <title>
        Die zuletzt mit Level 2 (error) ausgegebene Zeile
    </title>
</property>


<property name="last" access="read">
    <com>
        <com.parameter name="level">
            <com.type type="VARIANT">
                <com.type type="int"/>
                <com.type type="BSTR"/>
            </com.type>
        </com.parameter>

        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <java>
        <java.parameter name="level">
            <com.type type="int"/>
        </java.parameter>

        <java.result>
            <com.type type="BSTR"/>
        </java.result>
    </java>

    <java>
        <java.parameter name="level">
            <com.type type="BSTR"/>
        </java.parameter>

        <java.result>
            <com.type type="BSTR"/>
        </java.result>
    </java>

    <title>
        Letzte Ausgabe des angegebenen Levels
    </title>

</property>


<method name="start_new_file">
    <com/>

    <title>
        Nur fürs Hauptprotokoll: Schließt das bisherige und beginnt ein neues Protokoll
    </title>
</method>


<title>
    Protokollierung
</title>

<description>
    <p>
        In einem Job oder im Scheduler-Skript stellt
        <scheduler_method class="Job_impl" property="spooler_log"/>
        die hier beschriebenen Methoden bereit.
    </p>

    <h3>eMail-Versand</h3>
    <p>
        Am Ende einer Task kann der Scheduler das Task-Protokoll per eMail versenden.
        In es versendet werden soll, geben diese Eigenschaften an:
    </p>
    <ul>
        <li><scheduler_method class="Log" property="mail_on_error"/>,</li>
        <li><scheduler_method class="Log" property="mail_on_warning"/>,</li>
        <li><scheduler_method class="Log" property="mail_on_process"/>,</li>
        <li><scheduler_method class="Log" property="mail_on_success"/> und</li>
        <li><scheduler_method class="Log" property="mail_it"/></li>
    </ul>
    <p>
        Nur das Ende der Task, nicht das Ende einer Auftragsausführung
        (also <scheduler_method class="Job_impl" method="spooler_process"/>)
        führt zum eMail-Versand.
        Siehe aber <scheduler_method class="Task" method="end"/>.
    </p>
    <p>
        <scheduler_method class="Log" property="mail"/> stellt ein
        <scheduler_method class="Mail"/>-Objekt bereit,
        das die Adressierung übernimmt.
    </p>
</description>

<example programming_language="java">
    <pre>spooler_log.info( "Something for the Log" );

spooler_log.set_mail_on_warning( true );
spooler_log.mail().set_from   ( "scheduler@company.com" );
spooler_log.mail().set_to     ( "admin@company.com" );
spooler_log.mail().set_subject( "Task ended" );</pre>
</example>

<example programming_language="javascript">
    <pre>spooler_log.info( "Something for the Log" );

spooler_log.mail_on_warning = true;
spooler_log.mail.from    = "scheduler@company.com";
spooler_log.mail.to      = "admin@company.com";
spooler_log.mail.subject = "ended";</pre>
</example>

<example programming_language="perl">
    <pre>$spooler_log->info( "Something for the Log" );

$spooler_log->LetProperty( 'mail_on_warning', 1 );
$spooler_log->mail->LetProperty( 'from', 'scheduler@company.com' );
$spooler_log->mail->LetProperty( 'to', 'admin@company.com' );
$spooler_log->mail->LetProperty( 'subject', 'ended' );</pre>
</example>

</api.class>
