<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>

<!--$Id: termination.xml 11726 2005-09-25 18:33:33Z jz $-->

<description
    title    = "Beendigung des Schedulers"
    base_dir = ""
    author   = "$Author: jz $"
    date     = "$Date: 2005-09-25 20:33:33 +0200 (Sun, 25 Sep 2005) $"
>

    <h2>Ordentliches Beenden</h2>
    <p>
        Der JobScheduler beendet sich erst, wenn kein Job mehr läuft.
    </p>
    <p>
        Siehe <scheduler_method class="Spooler" method="terminate"/>
        und <scheduler_element name="modify_spooler" attribute="cmd" value="terminate"/>.
    </p>


    <h2>Ordentliches Beenden mit Frist</h2>
    <p>
        Sie können zum Beenden eine Frist angeben.
        Wenn nach Ablauf der First noch Tasks laufen,
        weil sie in z.B. <scheduler_method class="Job_impl" method="spooler_process"/> zu lange verharren,
        bricht der JobScheduler alle noch laufenden Prozesse ab.
    </p>
    <p>
        Zuvor verschickt er eine eMail mit dem Hinweis auf Tasks, die abgebrochen werden.
    </p>
    <p>
        Er wartet dann längstens 30s aufs Ende der Tasks (normalerweise gelingt der Abbruch sofort)
        und beendet sich dann.
    </p>
    <p>
        Siehe <scheduler_method class="Spooler" method="terminate"/>
        und <scheduler_element name="modify_spooler" attribute="cmd" value="terminate"/>.
    </p>


    <h2>Abbruch</h2>
    <p>
        Der JobScheduler bricht allen Prozesse (einschließlich der mit add_pid() registrierten fremden Prozesse) sofort ab
        (Unix: <code>kill -s KILL</code>, Windows: <code>TerminateProcess()</code>). Dann bricht er sich selbst ab.
    </p>
    <p>
        Vorteil: Der Abbruch wirkt sofort.
    </p>
    <p>
        Nachteil: Sie Software, insbesondere die Jobs können nicht darauf reagieren.
        Z.B. können temporäre Dateien nicht gelöscht werden.
    </p>
</description>
