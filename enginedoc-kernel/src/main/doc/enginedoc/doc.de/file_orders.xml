<?xml version="1.0"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>

<!--$Id: file_orders.xml 13320 2008-01-25 04:01:54Z aa $-->

<description
    title               = "Verzeichnisüberwachung mit Dateiaufträgen"
    base_dir            = ""
    author              = "$Author: aa $"
    date                = "$Date: 2008-01-25 05:01:54 +0100 (Fri, 25 Jan 2008) $"
>
    <scheduler_keyword keyword="Verzeichnis"/>
    <scheduler_keyword keyword="Datei"/>

    <p>
        Wenn eine Job-Kette Dateien aus einem Verzeichnis verarbeiten soll,
        können Sie Dateiaufträge verwenden.
        Ein Dateiauftrag ist ein Auftrag mit einem Verweis auf eine Datei.
        Der JobScheduler überwacht das Verzeichnis und erzeugt zu jeder neuen Datei einen Dateiauftrag.
    </p>
    
    <pre>&lt;job_chain name="<i>my_job_chain</i>">
    &lt;file_order_source directory="<i>path</i>"/>
    &lt;file_order_source directory="<i>other_path</i>" regex="<i>regex</i>"/>
    &lt;job_chain_node  state="<i>100</i>" job="<i>job_1</i> error_state="<i>error</i>"/>
    &lt;job_chain_node  state="<i>200</i>" job="<i>job_2</i> error_state="<i>error</i>"/>
    &lt;file_order_sink state="<i>ok</i>" remove="yes"/>
    &lt;file_order_sink state="<i>error</i>" move_to="<i>/errorpath.../ </i>"/>
&lt;/job_chain></pre>

    <p>
        Siehe
        <scheduler_element name="job_chain"/>,
        <scheduler_element name="file_order_source"/> und
        <scheduler_element name="file_order_sink"/>.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <scheduler_keyword keyword="Dateiauftragsquelle"/>
    
    <h2>Dateiauftragsquelle</h2>
    
    <p>
        Eine Dateiauftragsquelle <scheduler_element name="file_order_source"/>
        überwacht ein Verzeichnis.
        Wenn diesem ein Dateiname hinzugefügt wird,
        der dem optionalen Regulären Ausdruck entspricht,
        führt das zu einem Dateiauftrag.
    </p>
    <pre>&lt;job_chain …>
    &lt;file_order_source directory="…" regex="…"/>
    …</pre>

    <p>
        Ein Dateiauftrag ist ein Auftrag <scheduler_method class="Order"/> mit folgenden Eigenschaften:
    </p>
    <dl>
        <dt>
            <scheduler_method class="Order" object="order" property="state"/>
        </dt>
        <dd>
            Status des Auftrags ist der des ersten Jobs der Job-Kette
            oder der mit <scheduler_element name="file_order_source" attribute="next_state"/> eingestellte Zustand.
        </dd>
        <dt>
            <scheduler_method class="Order" object="order" property="id"/>
        </dt>
        <dd>
            Kennung des Auftrags ist der Pfad, zusammengesetzt aus Verzeichnisname,
            wie er in der Auftragsquelle angegeben ist,
            und dem Dateinamen.
        </dd>
        <dt>
            <scheduler_method class="Order" object="order" property="params"/><code>.<scheduler_method class="Variable_set" object="" method="value" value='"scheduler_file_path"'/></code>
        </dt>
        <dd>
            enthält den Pfad, derselbe Wert wie <scheduler_method class="Order" object="order" property="id"/>.
            Diese für den JobScheduler reservierte Variable macht einen Auftrag zum Dateiauftrag.
        </dd>
    </dl>

    <h3>Reihenfolge der Dateiaufträge</h3>
    <p>
        Die ältesten Dateien (die mit der am weitesten zurückliegenden letzten Änderung)
        werden zuerst berücksichtigt.
    </p>
    
    <h3>Mehrere Auftragsquellen</h3>
    <p>
        Eine Job-Kette kann mehrere Auftragsquellen haben. 
        Der JobScheduler berücksichtigt sie in der angegebenen Reihenfolge.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Der Dateiauftrag überwacht die Datei</h2>

    <p>
        Der JobScheduler entfernt einen Dateiauftrag,
        wenn die dazugehörige Datei nicht mehr im Verzeichnis steht
        und
    </p>
    <ul class="big">
        <li>
            <p>
                der Dateiauftrag noch nicht einem Job übergeben wurde
            </p>
            <scheduler_message level="warn" code="SCHEDULER-982"/>
        </li>
        <li>
            <p>
                der Dateiauftrag auf der Schwarzen Liste steht
            </p>
            <scheduler_message level="info" code="SCHEDULER-981"/>
        </li>
    </ul>
    <p>
        Dateiaufträge, die in Ausführung sind, sind nicht betroffen.
    </p>

    <p>
        Dieser Abgleich wird durchgeführt,
    </p>
    <ul>
        <li>
            wenn der JobScheduler das Verzeichnis liest,
        </li>
        <li>
            wenn der JobScheduler den Dateiauftrag zum ersten Mal einem Job übergibt.
        </li>
    </ul>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <scheduler_keyword keyword="Dateiauftragssenke"/>

    <h2>Auftragssenke: Datei verschieben oder entfernen </h2>
    <p>
        Am Ende der Ausführung des Auftrags kann die zugehörige Datei entfernt oder verschoben werden.
        Die mit <scheduler_element name="file_order_sink"/> definierten Zustände sind Endzustände.
    </p>
    <p>
        Wenn aber die Datei bereits entfernt worden ist,
        gibt der JobScheduler eine Warnung aus und der Dateiauftrag ist erledigt.
    </p>
    <scheduler_message level="warn" code="SCHEDULER-339"/>

    <p>
        Wenn die Datei sich nicht entfernen bzw. verschieben lässt, 
        gelangt der Auftrag auf die Schwarze Liste.
    </p>
    
    <h3>Datei verschieben</h3>
    <pre>&lt;file_order_sink state="…" move_to="<i>directory_path</i>"></pre>
    <p>
        Eine Datei gleichen Namens im Zielverzeichnis wird ohne Warnung überschrieben.
    </p>

    <h3>Datei entfernen</h3>

    <pre>&lt;file_order_sink state="…" remove="yes"></pre>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <scheduler_keyword keyword="Schwarze Liste"/>

    <h2>Schwarze Liste</h2>

    <p>
        Wenn ein Dateiauftrag ausgeführt ist (einen Endzustand erreicht hat),
        aber die Datei noch vorhanden ist,
        dann setzt der JobScheduler den Auftrag  auf die Schwarze Liste.
    </p>
    <scheduler_message level="warn" code="SCHEDULER-340"/>
    <p>
        Dort bleibt er bis
    </p>
    <ul>
        <li>
            der JobScheduler beim Lesen des Verzeichnisses feststellt, dass die Datei entfernt worden ist
            <scheduler_message level="info" code="SCHEDULER-981"/>
        </li>
        <li>
            das Kommando <scheduler_element name="remove_order"/> ausgeführt wird.
        </li>
    </ul>

    <p>
        Damit wird verhindert, dass die Datei sofort zu einem neuen Dateiauftrag führt.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Verzeichnis-Fehler</h2>
    <p>
        Wenn die Verzeichnisüberwachung auf einen Fehler läuft,
        zum Beispiel weil das Verzeichnis abgehängt worden ist,
        dann gibt der JobScheduler eine Warnung aus
        und erzeugt eine eMail
        (die Einstellungen aus <scheduler_ini_entry file="factory.ini" section="spooler"/> gelten).
    </p>

    <p>
        Der JobScheduler versucht periodisch die Überwachung erneut zu starten.
        Fehlermeldungen dabei werden ignoriert.
        Die Periode ist einstellbar mit <scheduler_element name="file_order_source" attribute="delay_after_error"/>.
        Wenn das Verzeichnis wieder lesbar ist,
        sendet der JobScheduler eine entsprechende eMail und
        gibt diese Meldung aus:
    </p>
    <scheduler_message level="info" code="SCHEDULER-984"/>
    
    <!--p>
        Ein einzelner Verzeichnis-Fehler wird mit Warnung ignoriert, die Operation wird sofort wiederholt.
    </p-->

    <h3>
        Fehler beim Erstellen des Dateiauftrags
    </h3>
    <p>
        Wenn ein Dateiname nicht zu einem Auftrag gemacht werden kann
        (weil der Pfad zu lang ist für die Datenbankspalte 
        <scheduler_db table="scheduler_orders" column="id"/>),
        dann merkt er sich den Pfad,
        um die Fehlermeldung nicht bei jedem Lesen des Verzeichnisses zu wiederholen,
        und setzt fort nach der Meldung
    </p>
    <scheduler_message level="warn" code="SCHEDULER-346"/>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Wann wird das Verzeichnis gelesen?</h2>

    <p>
        Sobald der erste Job zum ersten Mal bereit ist, einen Auftrag auszuführen, 
        liest der JobScheduler das Verzeichnis (mit der Beschränkung durch den Regulären Ausdruck)
        und erzeugt daraus Dateiaufträge.
    </p>
    <p>
        Wenn das Verzeichnis viele Dateien enthält
        (mehr als mit <scheduler_element name="file_order_source" attribute="max"/> eingestellt),
        dann verbleibt eine Liste der übrigen Dateien im Speicher,
        aus der der JobScheduler später die weiteren Dateiaufträge erzeugt.
        Die Meldungen dazu sind:
    </p>

    <scheduler_message level="info" code="SCHEDULER-985"/>
    <scheduler_message level="info" code="SCHEDULER-986"/>

    <p>
        Der JobScheduler liest das Verzeichnis erneut, wenn
    </p>
    <ul>
        <li>
            alle Dateien dem ersten Job übergeben worden sind,
        </li>
        <li>
            dieser für einen weiteren Auftrag bereit ist,
        </li>
        <li>
            und die mit <scheduler_element name="file_order_source" attribute="repeat"/>
            einstellte Periode abgelaufen ist.
        </li>
    </ul>


    <h3>Verzeichnisüberwachung durch Microsoft® Windows®</h3>

    <p>
        Unter Windows lässt der JobScheduler außerdem das Verzeichnis vom Betriebssystem überwachen.
        Eine Signalisierung veranlasst den Scheduler,
        das Verzeichnis vor Ablauf der Periode zu lesen.
        Damit reagiert der JobScheduler sofort auf eine neue Datei.
    </p>
    <p>
        Trotzdem sollte für ein Verzeichnis auf einem anderen Rechner das Wiederholungsintervall nicht mit
        <scheduler_element name="file_order_source" attribute="repeat" value="no"/> abgestellt werden.
        Die Windows-Verzeichnisüberwachung verstummt, 
        wenn das Verzeichnis entfernt und wieder angelegt wird.
        Siehe außerdem Microsofts 
        <!--dass die Überwachung eines Verzeichnisses auf einem anderen Rechner nicht korrekt funktioniert,
        wenn das Verzeichnis mehrfach geöffnet ist:-->
        <a href="http://support.microsoft.com/?scid=kb%3Ben-us%3B188321&amp;x=8&amp;y=13">Article 188321: 
        FindFirstChangeNotification May Not Notify All Processes on File Changes</a>.
        Das Wiederholungsintervall erneuert die Verzeichnisüberwachung periodisch.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Auftragsgesteuerte Nicht-API-Jobs (&lt;script language="shell">)</h2>
    <p>
        Einen auftragsgesteuerten Job 
        startet der JobScheduler für jeden Dateiauftrag.
    </p>
    <p>
        Die Umgebungsvariable <scheduler_env name="SCHEDULER_TASK_TRIGGER_FILES"/> enthält den Dateipfad.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    
</description>