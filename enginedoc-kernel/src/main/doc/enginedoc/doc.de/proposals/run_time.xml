<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id: run_time.xml 12157 2006-06-20 11:29:58Z jz $-->

<xml_element name     = "run_time"
             title    = "Vorschlag für geglättetes &lt;run_time>"
             category = "Konfiguration"
             base_dir = "../"
             parent_page = "index.xml"
             author   = "$Author: jz $"
             date     = "$Date: 2006-06-20 13:29:58 +0200 (Tue, 20 Jun 2006) $">

    <xml_parent_elements>
        <xml_parent_element name="job">
        </xml_parent_element>
    </xml_parent_elements>


    <xml_attributes>
        <xml_attribute name="once" type="yes_no" initial="no">
            <description>
                <p>
                    Bei <code>once="yes"</code> startet der <span class="sos_name">Scheduler</span>
                    den Job einmal nach Start des <span class="sos_name">Schedulers</span>,
                    sobald die <code>&lt;run_time</code> dies zulässt.
                </p>
            </description>
        </xml_attribute>

    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="date" multiple="yes">
            <description>
                <p>
                </p>
            </description>
        </xml_child_element>

        <xml_child_element name="weekdays">
            <description>
                <p>
                </p>
            </description>
        </xml_child_element>

        <xml_child_element name="monthdays">
            <description>
                <p>
                </p>
            </description>
        </xml_child_element>

        <xml_child_element name="ultimos">
            <description>
                <p>
                </p>
            </description>
        </xml_child_element>

        <xml_child_element name="holidays">
            <description>
                <p>
                </p>
            </description>
        </xml_child_element>
        
        <xml_child_element name="at" multiple="yes"/>
    </xml_child_elements>


    <description>
        <h2>
            Vorschlag für geglättetes, besser verständliches &lt;run_time> 
        </h2>
        <p>
            <code>&lt;run_time></code> hat einen zweistufigen, schwer begreiflichen Vererbungsmechanismus.
            Er war in den allerersten Wochen der Scheduler-Entwicklung als Komfort für eine verkürzte Schreibweise gedacht.
            Wenn wir einige Dinge in der Doku verschweigen
            und die Implementierung nur ein wenig erweitern,
            wäre die Wirkung von <code>&lt;run_time></code> klarer.
        </p>
        
        <h3>
            Verzicht auf die erste Stufe der Vererbung: &lt;run_time> ohne Attribute
        </h3>
        <p>
            Die Attribute von &lt;run_time>
            <code>begin=</code>,
            <code>end=</code>,
            <code>repeat=</code>,
            <code>let_run=</code> und
            <code>single_start=</code>
            werden nicht mehr erwähnt. 
            Nur <code>once=</code> bleibt.
            Stattdessen nimmt man ein &lt;period>. 
            Statt der verkürzten Form
            <pre>&lt;run_time begin="08:00" end="16:00"/></pre>
            <p>
                schreibt man ausführlich
            </p>
        </p>            
        <pre>&lt;run_time>
    &lt;period begin="08:00" end="16:00"/>
&lt;/run_time></pre>


        <h3>Verzicht auf die zweite Stufe der Vererbung: &lt;period> direkt unter &lt;run_time></h3>
        <p>
            Die Wirkung der <scheduler_element name="period"/> direkt unter <code>&lt;run_time></code> ist auch nicht so verständlich.
            Der Scheduler-Editor ordnet sie unter "Everyday" an, was mehr das gewünschte als das bislang tatsächliche Verhalten bezeichnet.
            Vielleicht also:
        </p>
        <pre>&lt;run_time>
    &lt;period begin="08:00" end="16:00"/>
&lt;/run_time></pre>
        <p>
            wird zu
        </p>
        <pre>&lt;run_time>
    &lt;weekdays>
        &lt;day day="monday-sunday">
            &lt;period begin="08:00" end="16:00"/>
        &lt;/day>
    &lt;/weekdays>        
&lt;/run_time></pre>
        <p>
            <br/>
            Was hier noch umständlich aussieht, ist im folgenden Beispiel verständlich:
        </p>
        <pre>&lt;run_time>
    &lt;period begin="08:00" end="16:00"/>
    &lt;weekdays>
        &lt;day day="monday"/>
        &lt;day day="tuesday"/>
        &lt;day day="wednesday"/>
        &lt;day day="thursday"/>
        &lt;day day="friday">
            &lt;period begin="08:00" end="12:00"/>
        &lt;/day>
    &lt;/weekdays>
&lt;/run_time></pre>
        <p>
            wird zu
        </p>
        <pre>&lt;run_time>
    &lt;weekdays>
        &lt;day day="monday-thursday">
            &lt;period begin="08:00" end="16:00"/>
        &lt;/day>
        &lt;day day="friday">
            &lt;period begin="08:00" end="12:00"/>
        &lt;/day>
    &lt;/weekdays>        
&lt;/run_time></pre>
        
        <p>
            <br/>
            Neu implementiert werden müsste lediglich, dass <scheduler_element name="day"/> mehrere Tage zugleich bestimmen kann:
        </p>
        <pre>&lt;day day="monday-wednesday friday">
&lt;day day="1 15"></pre>
        
        
        
        <h3>period und single_start trennen</h3>
        <p>
            Der JobScheduler unterscheidet Perioden von Single_starts. 
            Perioden erlauben den Start einer Task. 
            Sie veranlassen eine Task nur, wenn <code>repeat=</code> angegeben ist.
            Ein single_start dagegen sorgt dafür, dass zur angegebenen Zeit eine Task läuft.
            Auch bei <code>&lt;job tasks="3"></code> wird nur eine Task gestartet, egal wieviele Aufträge oder Tasks in der Warteschlange sind.
        </p>
        <p>
            Zur Verdeutlichung könnte man also <code>single_start</code> aus <code>&lt;period></code> herausnehmen:
        </p>
        <pre>&lt;period single_start="07:00"/></pre>
        <p>
            wird zu 
        </p>
        <pre>&lt;at time="07:00"/></pre>


        <h2>Erweiterungen</h2>

        <h3>&lt;period once="yes"></h3>

        <pre>&lt;period begin="08:00" end="16:00" once="yes"/></pre>
        <p>
            <code>once="yes"</code> lässt zu Beginn der Periode eine Task starten.
            Die Wirkung ist wie bei <code>repeat=</code>, nur dass es keine Wiederholung gibt.
        </p>

        <h3>Spätester Startzeitpunkt</h3>
        <pre>&lt;at time="02:00" end="05:00"/></pre>
        <p>
            Wenn der JobScheduler den Job nicht bis 5 Uhr starten kann, lässt er es.
            Das kann passieren, wenn die Prozessklasse erschöpft ist.
            Zusätzlich kann vielleicht noch <code>let_run="no"</code> angegeben werden.
        </p>
        <p>
            Das ist auch für Aufträge möglich. Der Auftrag wird nach Überschreiten der Zeit nicht ausgeführt.
        </p>

        <h3>Perioden oder single_starts mit Parametern</h3>
        <pre>&lt;day day="sunday">
    &lt;at time="02:00">        
        &lt;params>
            &lt;param name="backup_type" value="full"/>
        &lt;/params>
    &lt;/at>
&lt;/day></pre>
        <p>
            Die Parameter können der Task oder dem Auftrag hinzugefügt werden.
        </p>

    </description>

</xml_element>
