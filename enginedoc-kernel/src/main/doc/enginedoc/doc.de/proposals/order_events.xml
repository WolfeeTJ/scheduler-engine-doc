<?xml version="1.0"?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id: order_events.xml 12973 2007-09-09 11:10:05Z jz $-->

<description
    title               = "Ereignisse mit Aufträgen realisieren"
    base_dir            = "../"
    author              = "$Author: jz $"
    date                = "$Date: 2007-09-09 13:10:05 +0200 (Sun, 09 Sep 2007) $"
    document_state      = "work_in_progress"
>
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <scheduler_table_of_content/>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Ereignisse</h2>

    <p>
        Die Events scheinen Nachrichten zu sein,
        die große Ähnlichkeiten mit Aufträgen haben.
        Ich will einen Vorschlag machen,
        den vorhandenen Auftragsmechanismus
        zu verwenden und zu erweitern.
    </p>
    <p>
        Wir scheinen nur zwei neue Mechanismen zu brauchen:
        Trigger und die Zusammenführung mehrerer Aufträge.
    </p>
 
    
    <h3>Erzeugen eines Ereignisses</h3>

    <p>
        Wenn ein Ereignis ein Auftrag ist, kann er wie üblich erzeugt werden.
        Außerdem ließe sich einführen, 
        dass Aufträge über eine neue Datenbanktabelle,
        die der JobScheduler periodisch abfragt, 
        importiert werden können.
    </p>

    <h3>Ereignisse des Schedulers</h3>
    <p>
        Ereignisse im JobScheduler können zu Aufträgen führen.
    </p>
    

    <h2>Handler</h2>
    <p>
        Handler sind Jobs in Jobkettenknoten.
        Aufträge können dem nächsten Handler (Jobkettenknoten) gereicht,
        ignoriert (error_state) oder zurückgestellt (setback) werden.
    </p>
    <p>
        Die Handler werden also in eine Jobkette eingetragen.
        Sobald ein Auftrag einen bestimmten Zustand,
        hier »trigger« genannt erreicht,
        sollen die Trigger ansprechen.
    </p>

    <pre>&lt;job_chain name="my_events">
    &lt;job_chain_node job="handler_1" error_state="garbage"/> 
    &lt;job_chain_node job="handler_2" error_state="garbage"/>
    &lt;job_chain_node.trigger state="trigger"/>
    &lt;job_chain_node.end state="garbage"/>
&lt;/job_chain>    
&lt;job_chain>
    &lt;file_order_source …/>
    …
    &lt;job_chain_node.end state="trigger"/>
&lt;/job_chain>
 
 
&lt;job name="…">
    …
    &lt;commands>
        &lt;add_order job_chain="my_events" id="…">
            &lt;params>…&lt;/params>
        &lt;/add_order>
    &lt;/commands>
&lt;job><!-- 

&lt;job name="…">
    …
    &lt;commands>
        &lt;event event_class="…">
            &lt;params>…&lt;/params>
        &lt;/event>
    &lt;/commands>
&lt;job>--></pre>


    <h2>Trigger</h2>

    <p>
        Sobald ein Auftrag in einem bestimmten Zustand gelangt,
        also das Ereignis eintritt,
        lösen die darauf angesetzten Trigger aus.
        Die Trigger werden direkt in die <scheduler_element name="job"/>
        oder <scheduler_element name="job_chain"/> gesetzt.
    </p>
    <p>
        Etwa so:
    </p>

    <pre>&lt;job name="start_on_event">
    &lt;job.triggers>
        &lt;job.trigger_on_order job_chain="my_events" state="trigger"/>
    &lt;/job.trigger>
&lt;/job_chain>
&lt;job_chain>
    &lt;job_chain.triggers>
        &lt;job_chain.trigger_on_order job_chain="my_events" state="trigger"/>
    &lt;/job_chain.trigger>
&lt;/job_chain></pre>

    <p>
        Der Job startet eine Task und die Jobkette erzeugt einen Auftrag,
        wenn deren Trigger auslösen, 
        also ein Auftrag der Jobkette »my_events« den Zustand »trigger« erreicht.
    </p>
    
    
    <h2>
        Mehrere Aufträge (Ereignisse) gemeinsam einen Trigger auszulösen lassen
    </h2>
    <p>
        Der Vorschlag in <scheduler_a href="siegmund_und_sieglinde.xml" quote="yes"/>
        beschreibt, wie Aufträge zusammengeführt werden können. 
        Der verbundene Auftrag kann dann einen Trigger auslösen.
    </p>
    <pre>&lt;job_chain name="my_events">
    &lt;job_chain_node job="handler_1" error_state="garbage"/> 
    &lt;job_chain_node job="handler_2" error_state="garbage"/>
    &lt;job_chain_node.marry job_chain="my_other_events"/>
    &lt;job_chain_node.end state="trigger"/>
    &lt;job_chain_node.end state="garbage"/>
&lt;/job_chain></pre>

    <h2>Event-Klasse und Event-ID</h2>
    <p>
        Die Event-Klasse wäre dann die Jobkette
        und die Event-ID die Auftrags-ID.
        Möglicherweise wird man die Event-Klasse trotzdem brauchen?
    </p>


    <h2>Beispiel</h2>

</description>
