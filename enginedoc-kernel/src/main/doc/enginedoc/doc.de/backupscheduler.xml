<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>
<description
    title               = "Backup JobScheduler"
    base_dir            = ""
    author              = "$Author: ur $"
    date                = "$Date: 2007-01-10 17:19:39 +0200 (Do, 05 Okt 2006) $"
>

<h2>JobScheduler Backup Cluster</h2>

<p>Ein Scheduler Backup-Cluster sorgt für Ausfallsicherheit für einen Scheduler indem ein oder mehrere Ersatz-Scheduler (Backup Scheduler) auf anderen Rechnern gestartet 
werden. Eine ausfallsicheres System besteht demnach aus einem primären Scheduler und mindestens einem Backup Scheduler. </p>

<p>In einem Backup-Cluster zeigen alle JobScheduler ihre Verfügbarkeit durch das Versenden von Herzschlägen an. Alle JobScheduler prüfen, ob die 
jeweils anderen JobScheduler verfügbar sind. Stellt ein Backup Scheduler fest, dass vom primären Scheduler die Herzschläge über einen längeren Zeitraum
(ca. 1-2 Minuten) ausbleiben, übernimmt dieser die Verarbeitung. Dabei werden die offenen Aufträge und laufenden Jobs fortgeführt und entsprechend
der Konfiguration neue Jobs gestartet</p>


<p>In einem Backup Cluster ist maximal ein JobScheduler aktiv, d.h. der primäre JobScheduler startet Jobs bzw. verarbeitet Aufträge. 
Die anderen JobScheduler sind inaktiv, d.h. die Backup JobScheduler warten darauf, 
bei Ausfall des primären JobSchedulers die Verarbeitung zu übernehmen.</p>

<p>Die Voraussetzungen für die Operation eines Backup Clusters sind schematisch in der folgende Zeichnung abgebildet,
und werden im Detail in den nächsten Abschnitt beschreiben.</p>

<img class="screen_shot" src="images/availability-prerequisites-size67-qual100.jpg" />

<p>Die Übernahme der Verarbeitung durch eines Backup JobSchedulers ist schematisch in der folgende Zeichnung abgebildet:</p>

<img class="screen_shot" src="images/availability-failover-size67-qual100.jpg" />


<h3>Voraussetzungen für den JobScheduler Backup Cluster</h3>

<ul>
<li>
Alle JobScheduler des Clusters verwenden die selbe Datenbank. 
Es werden die Datenbanksysteme Oracle, DB2, MySQL und Postgres unterstützt.
</li>
<li>
Alle JobScheduler verwenden die selbe Konfigurationsdatei bzw. eine genaue Kopie.
</li>
<li>
Der primäre Scheduler und die Backup Scheduler werden mit der gleichen Scheduler-ID gestartet. 
</li>
<li>
Der primäre Scheduler und die Backup Scheduler werden mit der Option <scheduler_option name="exclusive"/> 
gestartet. 
</li>
</ul>

<h3>Starten des JobScheduler Backup Clusters</h3>

<p>Die JobScheduler, die den Cluster bilden, werden in beliebiger Reihenfolge gestartet. 
Der erste JobScheduler, der nicht mit der Option <scheduler_option name="backup"/> gestartet wurde, wird aktiv.</p>

<h3>Kommandozeilenparameter</h3>

<p>Folgende Kommandozeilenparameter konfigurieren einen JobScheduler als Mitglied des Backup Clusters:</p>

<ul>
<li><scheduler_option name="exclusive"/>
bestimmt, dass der JobScheduler Mitglied des Backup Cluster ist.</li>
<li><scheduler_option name="backup"/>
bestimmt, dass es sich um einen Backup JobScheduler handelt. 
Fehlt das Attribut, dann handelt es sich um einen primären JobScheduler. 
Es kann mehrere Backup JobScheduler geben, die alle die gleiche Startpriorität 
im Falle eines Ausfalls des aktiven JobSchedulers haben</li>
<li><scheduler_option name="backup-precedence"/>
bestimmt die Rangfolge, mit der Backup JobScheduler aktiv werden. 
Es wird jeweils der JobScheduler mit dem kleinstem Wert aktiv, wenn der primäre JobScheduler ausfällt.</li>
</ul>

<h3>Beenden von JobSchedulern im Backup Cluster mit den Funktionen der Web-Oberfläche</h3>


<p>Beim Beenden werden die laufenden Prozessschritte von Jobs noch ausgeführt,
allerdings keine neuen Prozessschritte veranlasst. 
Mit dem Parameter <scheduler_option name="timeout"/>=&lt;wert&gt; 
kann das Beenden laufender Prozessschritte nach Ablauf einer Zeit erzwungen werden.</p>


<h4>Beenden aller JobScheduler im Backup Cluster</h4>
<p>Alle JobScheduler im Cluster werden beendet, indem in der JobScheduler Web-Oberfläche das Kommando "terminate cluster" aufgerufen wird. 
</p>
<p>Entspricht dem XML-Kommando &lt;terminate all_schedulers="yes"&gt;</p>


<h4>Beenden aller JobScheduler im Backup Cluster mit Timeout</h4>
<p>Alle JobScheduler im Cluster werden beendet, indem in der JobScheduler Web-Oberfläche das Kommando "terminate cluster within 60s" 
aufgerufen wird. 
Nach Ablauf von 60 Sekunden werden alle noch laufenden Prozessschritte abgebrochen. </p>
<p>Entspricht dem XML-Kommando &lt;terminate all_schedulers="yes" timeout="60"&gt;</p>


<h4>Beenden aller JobScheduler im Backup Cluster mit Neustart</h4>
<p>Alle JobScheduler im Cluster werden beendet, indem in der JobScheduler Web-Oberfläche das Kommando "terminate and restart cluster" 
aufgerufen wird. Anschließend starten sie neu. 
Der primäre JobScheduler ist nach dem Neustart wieder aktiv.</p>
<p>Werden alle JobScheduler neu gestartet, so ist anschließend der primäre JobScheduler der aktive JobScheduler.</p>
<p>Entspricht dem XML-Kommando &lt;terminate all_schedulers="yes" restart="yes"&gt;</p>


<h4>Beenden aller JobScheduler im Backup Cluster mit Timeout und Neustart</h4>
<p>Alle JobScheduler im Cluster werden beendet, indem in der JobScheduler Web-Oberfläche das Kommando "terminate and restart cluster" 
aufgerufen wird. Die JobScheduler starten anschließend neu.
Der primäre JobScheduler ist nach dem Neustart wieder aktiv. 
Nach Ablauf von 60 Sekunden werden alle noch laufenden Prozessschritte abgebrochen.</p>
<p>Werden alle JobScheduler neu gestartet, so ist anschließend der primäre Scheduler der aktive JobScheduler</p>
<p>Entspricht dem XML-Kommando &lt;terminate all_schedulers="yes" restart="yes" timeout="60"&gt;</p>


<h4>Beenden des aktiven JobSchedulers. Die Backup JobScheduler bleiben gestartet ohne Jobs und Aufträge zu verarbeiten</h4>
<p>Ein aktiver JobScheduler wird beendet, indem in der JobScheduler Web-Oberfläche das Kommando "terminate" aufgerufen wird. 
Das Kommando hat keinen Einfluss auf Backup JobScheduler, es erfolgt kein Failover, da kein Fehlerzustand
im primären JobScheduler eingetreten ist.
</p>
<p>Entspricht dem XML-Kommando &lt;terminate&gt;</p>


<h4>Beenden des aktiven JobSchedulers mit Neustart. Die Backup JobScheduler bleiben gestartet ohne Jobs und Aufträge zu verarbeiten</h4>
<p>Ein aktiver JobScheduler wird beendet und anschließend neu gestartet, indem in der JobScheduler Web-Oberfläche 
das Kommando "terminate and restart" aufgerufen wird.
Das Kommando hat keinen Einfluss auf Backup JobScheduler, es erfolgt kein Failover, da kein Fehlerzustand
im primären JobScheduler eingetreten ist.
</p>
<p>Entspricht dem XML-Kommando &lt;terminate restart="yes"&gt;</p>


<h4>Beenden eines Backup JobSchedulers mit Neustart.</h4>
<p>Ein JobScheduler wird beendet und anschließend neu gestartet, indem in der JobScheduler Web-Oberfläche 
das Kommando "terminate and restart" aufgerufen wird. </p>
<p>Der Backup JobScheduler wird nach dem Neustart nicht aktiv. 
Ist im Cluster ein inaktiver primärer JobScheduler gestartet, so wird dieser aktiv.</p>
<p>Entspricht dem XML-Kommando &lt;terminate restart="yes"&gt;</p>

 
<h3>Primären JobScheduler nach Ausfall reaktivieren</h3>

<ol>
<li>Der primäre JobScheduler wird nach einem Ausfall gestartet. Falls bereits ein Backup JobScheduler läuft, 
übernimmt der primäre JobScheduler nicht die Verarbeitung.</li>
<li>Der Backup JobScheduler wird neu gestartet ("terminate and restart"). 
Der primäre, bislang inaktive, JobScheduler wird aktiv und
übernimmt die Verarbeitung. Wenn mehrere primäre JobScheduler vorhanden sind, 
bestimmt <scheduler_option name="backup-precedence"/> welcher JobScheduler aktiv wird.</li>
</ol>
 

<h3>Backup JobScheduler übernimmt die Verarbeitung</h3>

<p>
Der primäre JobScheduler wird mit "terminate fail-safe" beendet. 
Ein bereits laufender Backup JobScheduler übernimmt automatisch nach ca. 1-2 Minuten die Verarbeitung.  
</p>


<h3>Verhalten des Dienstes unter Windows</h3>

<ul>
<li>Das Beenden des Dienstes entspricht dem Kommando &lt;terminate&gt;. Die Backup JobScheduler laufen nicht an. 
Wird ein Backup JobScheduler beendet und gibt es einen inaktiven primären JobScheduler, 
so wird der primäre JobScheduler aktiv.</li>
<li>Das Starten des Dienstes entspricht dem Kommando <scheduler_element name="terminate" attribute="restart" value="yes"/>. Die Backup-Scheduler laufen nicht an. 
Der primäre JobScheduler wird aktiv.</li>
</ul>


<h3>Verhalten beim Neustart des Rechners</h3>

<ul>
<li>Wenn der Rechner heruntergefahren wird, übernimmt ein Backup JobScheduler auf einem zweiten Rechner 
(continue_exclusive_operation="yes")</li>
<li>Wenn primärer JobScheduler und Backup JobScheduler neu gestartet werden, z.B. wg. Neustart der Server,
dann kann es sein, dass der Backup JobScheduler zuerst startet. 
Er übernimmt dann nicht sofort die Verarbeitung sondern wartet, 
ob vom primären JobScheduler ein Herzschlag kommt. 
Nur wenn nach 60s kein Herzschlag kommt, übernimmt der Backup JobScheduler die Verarbeitung. 
Dies entspricht dem Standardverhalten beim Ausbleiben eines Herzschlags des aktiven JobSchedulers.</li>
</ul>


<h3>Einen inaktiven Backup JobScheduler zum aktiven primären JobScheduler machen</h3>
<p>Wenn ein aktiver Backup JobScheduler beendet wird, dann wird er beim Neustart inaktiv sein. 
Falls der primäre JobScheduler längere Zeit ausfällt, muss der Backup JobScheduler 
als primärer JobScheduler gestartet werden. 
Ein Backup JobScheduler wird als primärer JobScheduler gestartet, 
indem beim Aufruf von <code>jobscheduler.cmd</code> der Parameter "start -exclusive" anstelle von "start" angegeben wird. </p>


<h3>Kommandos des Startscript</h3>
<p>Wenn beim Start nur der Parameter "start" angegeben wird, damm wird der JobScheduler so gestartet 
wie es beim Setup eingerichtet wurde.</p>
<p>Folgende zusätzliche Kommandos gibt es für den Betrieb eines JobScheduler im Backup Cluster</p>
<ul>
<li><b>terminate_cluster</b> Fährt alle JobScheduler des Backup Clusters herunter</li>
<li><b>restart_cluster</b> Startet alle JobScheduler des Backup Clusters neu. 
Anschließend ist der primäre JobScheduler aktiv.</li>
<li><b>terminate_fail-safe</b> Beendet den JobScheduler. Ein anderer, inaktiver JobScheduler im Backup Cluster wird aktiv.</li>
<li><b>start -exclusive</b> Startet einen primären JobScheduler im Backup Cluster.</li>
<li><b>start -exclusive -backup</b> Startet einen Backup JobScheduler im Cluster.</li>
<li><b>start -exclusive -backup -backup-precedence=[n]</b> Startet einen Backup JobScheduler im Cluster 
mit der Rangfolge [n].</li>
</ul>

<h3>Weiterführende Links</h3>
		
<ul>
	<li>
		<a href="http://www.sos-berlin.com/mediawiki/index.php/Watchdog_monitor_für_cluster_failover">Watchdog-Monitor für Cluster Failover</a>.
	</li>
</ul>

</description>
