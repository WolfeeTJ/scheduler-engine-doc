<?xml version="1.0" encoding="utf-8"?>
<!--DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"-->
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id: modify_spooler.xml 13134 2007-10-22 15:40:29Z aa $-->

<xml_element name     = "modify_spooler"
             title    = "Kommando an den ganzen Scheduler"
             base_dir = "../"
             category = "Kommando"
             author   = "$Author: aa $"
             date     = "$Date: 2007-10-22 17:40:29 +0200 (Mon, 22 Oct 2007) $">



    <description>
        <p>
            Wenn der JobScheduler wegen Plattenplatzmangel für ein Protokoll angehalten hat
            (<scheduler_element name="state" attribute="waiting_errno" directory="xml/answer/"/>),
            werden die Subkommandos
            <code>pause</code>,
            <code>reload</code>,
            <code>terminate</code>,
            <code>terminate_and_restart</code>,
            <code>let_run_terminate_and_restart</code>
            nicht sofort ausgeführt.
            Dagegen wirken <code>continue</code>, <code>abort_immediately</code> und <code>abort_immediately_and_restart</code> sofort.
        </p>
    </description>


    <xml_parent_elements>
        <xml_parent_element name="commands"/>
    </xml_parent_elements>


    <xml_attributes>
        <xml_attribute name="cmd" type="cmd">
            <description>
                <p>
                    Folgende Subkommandos sind möglich:
                </p>

                <dl>
                    <dt><code>cmd="pause"</code></dt>
                    <dd>
                        Hält den JobScheduler vorübergehend an.
                        Tasks in eigenen Prozessen laufen noch solange weiter, wie sie nicht mit dem JobScheduler kommunizieren.
                    </dd>

                    <dt><code>cmd="continue"</code></dt>
                    <dd>
                        Hebt <code>cmd="pause"</code> auf.<br/>
                        Oder setzt den JobScheduler fort, wenn er wegen Platzmangels für die Protokolldateien angehalten hat
                        (<scheduler_element name="state" attribute="waiting_errno" directory="xml/answer/">siehe hier</scheduler_element>).                        
                    </dd>
<!--
                    <dt><code>cmd="stop"</code></dt>
                    <dd>
                        ?
                    </dd>
-->
                    <dt><code>cmd="reload"</code></dt>
                    <dd>
                        Lädt die Skripte der Jobs neu.
                    </dd>

                    <dt><code>cmd="terminate"</code></dt>
                    <dd>
                        Beendet den JobScheduler ordentlich
                        (näheres <a href="../termination.xml">hier</a>) und <scheduler_method class="Spooler" method="terminate"/>).
                    </dd>

                    <dt><code>cmd="terminate_and_restart"</code></dt>
                    <dd>
                        Beendet den JobScheduler ordentlich und versucht ihn dann neu zu starten
                        (näheres <a href="../termination.xml">hier</a> und <scheduler_method class="Spooler" method="terminate_and_restart"/>).
                    </dd>

                    <dt><code>cmd="let_run_terminate_and_restart"</code></dt>
                    <dd>
                        Beendet den JobScheduler ordentlich und versucht ihn dann neu zu starten.
                        Laufende Tasks werden nicht beendet (außer wartende Tasks im Zustand running_waiting_for_order).
                        Erst wenn sich alle Tasks beendet haben, endet der Scheduler.
                        (Näheres <a href="../termination.xml">hier</a>).
                    </dd>

                    <dt><code>cmd="abort_immediately"</code></dt>
                    <dd>
                        Bricht den JobScheduler sofort ab
                        (näheres <a href="../termination.xml">hier</a>).
                    </dd>

                    <dt><code>cmd="abort_immediately_and_restart"</code></dt>
                    <dd>
                        Bricht den JobScheduler sofort ab und versucht ihn dann neu zu starten
                        (näheres <a href="../termination.xml">hier</a>).
                    </dd>

                </dl>
            </description>
        </xml_attribute>

        <xml_attribute name="timeout" type="int">
            <description>
                <p>
                    Für <code>cmd="terminate"</code> und <code>cmd="terminate_and_restart"</code>:
                    Die Frist, nach der der JobScheduler nicht beendete Prozesse abbrechen soll.
                </p>
                <p>
                    Voreingestellt ist eine endlose Frist.
                </p>
                <p>
                    Siehe <scheduler_method class="Spooler" method="terminate"/>.
                </p>
            </description>
        </xml_attribute>

    </xml_attributes>

    <xml_answer element="ok"/>


    <example>
        <pre>&lt;modify_spooler cmd="abort_immediately_and_restart"/></pre>
    </example>
</xml_element>
