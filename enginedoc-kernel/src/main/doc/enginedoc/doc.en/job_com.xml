<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>

<!--$Id$-->

<description 
    title    = "Implementation of JobScheduler scripts as COM Classes" 
    base_dir = ""
    author   = "Author: jz "
    date     = "$Date: 2012-06-12 21:42:49 +0200 (Di, 12 Jun 2012) $"
>
    <scheduler_keyword keyword="COM"/>
    

<div align="left">
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td align="right">
<!--
&#160;1. January 2012
-->
</td>
</tr>
</table>
</div>

<p>&#160;</p>

<p>In previous versions of the JobScheduler, jobs were created using a Scripting Engine and the code (text) of the
scripts (VBScript, JScript, PerlScript) were directly entered in the <font class="mono">&lt;script&gt;</font> element.</p>
<!--
<p>Bisher wird ein Skript im JobScheduler mit einer Scripting Engine realisiert. Das Skript in einer Skriptsprache
(VBScript, JScript, PerlScript) wird direkt im Element <font class="mono">&lt;script&gt;</font> angegeben.</p>
-->
<p>
A JobScheduler job can also be implemented as a <span style="font-variant: small-caps">com</span> class. 
This class can be implemented in every language which supports <span style="font-variant: small-caps">com</span>, 
such as C#, C++, Delphi and VisualBasic (VB6 or VB.net). 
The <span style="font-variant: small-caps">com</span> class can, however, also be implemented with 
VBScript, JScript und PerlScript using the &quot;Windows Script Component&quot;.</p>
<!--
<p>Ein JobScheduler-Skript lässt sich auch als <span style="font-variant: small-caps">com</span>-Klasse
implementieren. Die <span style="font-variant: small-caps">com</span>-Klasse
kann in jeder Sprache, die <span style="font-variant: small-caps">com</span>
unterstützt, implementiert werden, u.a. C++, Delphi und VisualBasic. Mit Hilfe
von &quot;Windows
Script Component&quot; lässt sich die <span style="font-variant: small-caps">com</span>-Klasse
auch mit VBScript, JScript und (vermutlich) PerlScript realisieren.</p>
-->

<p>This class allows use of job, thread script or JobScheduler script methods as follows:</p>
<!--
<p>Die Klasse stellt die Methoden eines Jobs, Thread-Skripts oder
JobScheduler-Skripts bereit, also:</p>
-->

<p class="indent"><font class="mono">spooler_init()<br/>
spooler_exit()<br/>
spooler_open()<br/>
spooler_close()<br/>
spooler_process()<br/>
spooler_on_success()<br/>
spooler_on_error()</font></p>

<p>Each method is optional. Should a method not be implemented, 
then the existing JobScheduler script procedure will be followed.</p>
<!--
<p>Jede Methode ist optional. Ist sie nicht implementiert, wird wie bei den
bisherigen JobScheduler-Skripten verfahren.</p>
-->

<p>In addition, this class should provide a method with which the JobScheduler context can be assigned:</p>
<!--
<p>Die Klasse sollte außerdem eine Methode bereitstellen, mit der der
JobScheduler-Kontext übergeben wird:</p>
-->

<p class="indent"><font class="mono">spooler_set_context(context)</font></p>

<p>This context is a <span style="font-variant: small-caps">com</span> object
(<font class="mono">IDispatch</font>) with the following properties:</p>
<!--
<p>Dieser Kontext ist ein <span style="font-variant: small-caps">com</span>-Objekt
(<font class="mono">IDispatch</font>) mit folgenden Eigenschaften:</p>
-->

<p class="indent"><font class="mono">log<br/>
JobScheduler<br/>
job<br/>
task</font></p>

<p>These properties deliver the 
<font class="mono">spooler_log</font>,
<font class="mono">spooler_task</font>, 
<font class="mono">spooler_job</font> and 
<font class="mono">JobScheduler</font> objects, known from the JobScheduler-Script.</p>
<!--
<p>Diese Eigenschaften liefern die aus dem JobScheduler-Skripten bekannten Objekte <font class="mono">spooler_log</font>,
<font class="mono">spooler_task</font>, <font class="mono">spooler_job</font>, <font class="mono">spooler_thread</font>
und <font class="mono">JobScheduler</font>.</p>
-->

<p class="zwischentitel">Similarities between script in the Scripting Engine und the 
<span style="font-variant: small-caps">com</span> class:</p>
<!--
<p class="zwischentitel">Gemeinsamkeiten von Skript in Scripting Engine und <span style="font-variant: small-caps">com</span>-Klasse</p>
-->

<ul>
<li>the (<font class="mono">spooler_init()</font>, <font class="mono">spooler_open()</font>
	etc.) requests are the same in both</li>
<li>these calls are optional in both</li>
<!--
<li>Attribut <font class="mono"> use_engine=&quot;task&quot;</font>
	und <font class="mono">use_engine =&quot;job&quot;</font> möglich.</li>
<li>Als Job-Skript, Thread-Skript und JobScheduler-Skript (bzw. -Klasse) verwendbar</li>
<li>Aufrufe (<font class="mono">spooler_init()</font>, <font class="mono">spooler_open()</font>
	etc.) sind gleich</li>
<li>Die Aufrufe sind optional</li>
-->
</ul>

<p class="zwischentitel">
	Differences between Script in the Scripting Engine and the 
	<span style="font-variant: small-caps">com</span> class:
</p>
<!--
<p class="zwischentitel">Unterschiede zwischen Skript in Scripting Engine und <span style="font-variant: small-caps">com</span>-Klasse</p>
-->

<p>&#160;</p>

<div align="left">
	<table border="0" cellpadding="0" cellspacing="0" width="100%">
		<tr>
		<td width="48%" valign="top" align="left"><p><u>Skript using the Scripting Engine</u></p></td>
<!--<td width="48%" valign="top" align="left"><p><u>Skript mit Scripting Engine</u></p></td>-->
		<td width="4%" valign="top" align="left"></td>
		<td width="48%" valign="top" align="left"><p><u>COM Class</u></p></td>
<!--<td width="48%" valign="top" align="left"><p><u>COM-Klasse</u></p></td>-->
		</tr>
		<tr>
			<td width="48%" valign="top" align="left"><p>
				Source code is included in the configuaration (or externally using <font class="mono">&lt;include&gt;</font>).</p>
		<!--Quellcode wird in der Konfiguration angegeben (oder extern mit <font class="mono">&lt;include&gt;</font>).</p>-->
			</td>
			<td width="4%" valign="top" align="left"></td>
			<td width="48%" valign="top" align="left"><p>
				Implementation is independent of the JobScheduler.
				Any language which generates COM classes with late binding (<font class="mono">IDispatch</font>) can be used.</p>
		<!--Implementierung ist unabhänging vom JobScheduler.
				Jede Sprache, die COM-Klassen mit später Bindung (<font class="mono">IDispatch</font>)
				generiert, kann verwendet werden.</p>-->
			</td>
		</tr>
		<tr>
			<td width="48%" valign="top" align="left"><p>
				The context makes the following predefined variables available to the script:
				<font class="mono">spooler_log</font>,
				<font class="mono">JobScheduler</font>,
				<font class="mono">spooler_job</font> and 
				<font class="mono">spooler_task</font>.&#160;</p>
		<!--Der Kontext steht dem Skript mit den vordefinierten Variablen <font class="mono">spooler_log</font>,
				<font class="mono">JobScheduler</font>, <font class="mono">spooler_thread</font>, <font class="mono">spooler_job</font>
				und <font class="mono">spooler_task</font> zur Verfügung.&#160;</p>-->
			</td>
			<td width="4%" valign="top" align="left"></td>
			<td width="48%" valign="top" align="left"><p>
				The JobScheduler makes the <font class="mono">spooler_set_context()</font> 
				method of the <span style="font-variant: small-caps">com</span> object available.</p>
		<!--Der JobScheduler übergibt den Kontext dem <span style="font-variant: small-caps">com</span>-Objekt
				mit dessen Methode <font class="mono">spooler_set_context()</font>.</p>-->
			</td>
		</tr>
		<tr>
			<td width="48%" valign="top" align="left"><p>
				A script can be used reused by way of <font class="mono">&lt;include&gt;</font> 
				at different stages when it is saved as a file</p>
		<!--Dasselbe Skript kann, wenn es in einer eigenen Datei vorliegt,
				mit <font class="mono">&lt;include&gt;</font> an mehreren Stellen verwendet
				werden.</p>-->
			</td>
			<td width="4%" valign="top" align="left"></td>
			<td width="48%" valign="top" align="left"><p>
				The class can be used at different stages. 
				Seperate class objects are made.</p>
		<!--Die Klasse kann an mehreren Stellen verwendet werden. Es werden
				getrennte Objekte der Klasse angelegt.</p>-->
			</td>
		</tr>		
	</table>
</div>

<p>&#160;</p>

		<p class="zwischentitel">Declaration in the JobScheduler Configuration&#160;</p>
<!--<p class="zwischentitel">Deklaration in der JobScheduler-Konfiguration&#160;</p>-->

<p><br/>
A job registered with a <span style="font-variant: small-caps">com</span> class
can be addressed by its class name:</p>
<!--Der als <span style="font-variant: small-caps">com</span>-Klasse registrierte
Job kann über seinen Klassennamen angegeben werden:</p>-->

<p class="indent"><font class="mono">&lt;job name=&quot;delphijob&quot;&gt;<br/>
		&#160;&#160;&#160; &lt;script <b>com_class=</b>&quot;my_spooler_job_class&quot;/&gt;<br/>
<!--&#160;&#160;&#160; &lt;script <b>com_class=</b>&quot;meine_spooler_job_klasse&quot;/&gt;<br/>-->
&lt;/job&gt;</font></p>

<p><br/>
<br/>
The unique <span style="font-variant: small-caps">clSID</span> can be specified instead of the class name:</p>
<!--Statt des Klassennamens kann auch die eindeutige <span style="font-variant: small-caps">clSID</span>
angegeben werden:</p>-->

<p class="indent"><font class="mono">&lt;job name=&quot;delphijob&quot;&gt;<br/>
&#160;&#160;&#160; &lt;script <b>com_class=</b>&quot;{F44FF458-D4DE-4cef-AA1A-CCC507346581}&quot;/&gt;<br/>
&lt;/job&gt;</font></p>

		

	<p class="zwischentitel">
		Direct DLL Specification
<!--Direkte Angabe der DLL-->
	</p>

<p>
		<i><font color="#FF0000">When a DLL requires a further DLL which cannot be loaded, 
		then Windows stops the JobScheduler with a message box.
		The JobScheduler continues only after the ok button is clicked.
		Specification of the DLL is therefore not suitable for unsupervised use.</font></i>
<!--<i><font color="#FF0000">Wenn die DLL eine weitere DLL braucht, die nicht
		geladen werden kann, hält Windows den JobScheduler mit einer Messagebox an. Erst wenn
		der OK-Knopf gedrückt wird, setzt der JobScheduler fort. Die Angabe der DLL ist also
		nicht für den unbeaufsichtigten Betrieb geeignet.</font></i>-->
</p>

<p>
		Should the <span style="font-variant: small-caps">com</span> class not be registered, 
		then the DLL can be directly specified.
		The class is then defined as a hexadecimal <span style="font-variant: small-caps">CLSID</span>.
<!--Wenn die <span style="font-variant: small-caps">com</span>-Klasse nicht
		registiert werden soll, kann auch die DLL direkt angegeben werden. Die Klasse wird dann als hexadezimale <span style="font-variant: small-caps">CLSID</span>
		angegeben.-->
</p>

<p class="indent">
		<font class="mono">&lt;job name=&quot;delphijob&quot;&gt;<br/>
		&#160;&#160;&#160; &lt;script com_class=&quot;{xxxx-xx-...}&quot; filename=&quot;my_delphi.dll&quot;/&gt;<br/>
<!--&#160;&#160;&#160; &lt;script com_class=&quot;{xxxx-xx-...}&quot; filename=&quot;meine_delphi.dll&quot;/&gt;<br/>-->
		&lt;/job&gt;</font>
</p>

		<p class="zwischentitel">Example:</p>
<!--<p class="zwischentitel">Beispiel</p>-->

<p>
		The <span style="font-variant: small-caps">com</span> class is specified using the 
		&quot;Windows Script Component&quot;. 
		The source is:
<!--Die <span style="font-variant: small-caps">com</span>-Klasse wird mit &quot;Windows
		Script Component&quot; realisiert. Die Quelle ist:-->
</p>

<p class="indent"><font class="mono">&lt;?XML version="1.0"?><br/>
&lt;component><br/>
&#160;&#160;&#160; &lt;registration<br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; progid&#160;&#160;&#160;&#160;&#160; = "Joacim.Component"<br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; classid&#160;&#160;&#160;&#160; = "{F44FF458-D4DE-4cef-AA1A-CCC507346581}"<br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; description = "Joacims Script Component"<br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; version&#160;&#160;&#160;&#160; = "1"<br/>
&#160;&#160;&#160; /><br/>
<br/>
&#160;&#160;&#160; &lt;public><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;method name="spooler_set_context"/><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;method name="spooler_init"/><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;method name="spooler_exit"/><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;method name="spooler_open"/><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &lt;method name="spooler_process"/><br/>
&#160;&#160;&#160; &lt;/public><br/>
<br/>
&#160;&#160;&#160; &lt;script language="VBScript"><br/>
&#160;&#160;&#160; &lt;![CDATA[<br/>
<br/>
dim spooler_log<br/>
dim spooler_task<br/>
dim i<br/>
<br/>
function spooler_set_context(c)<br/>
&#160;&#160;&#160; set spooler_log&#160; = c.log<br/>
&#160;&#160;&#160; set spooler_task = c.task<br/>
&#160;&#160;&#160; spooler_log "Script component spooler_set_context"<br/>
end function<br/>
<br/>
function spooler_init<br/>
&#160;&#160;&#160; spooler_log "Script component spooler_init"<br/>
end function<br/>
<br/>
function spooler_exit<br/>
&#160;&#160;&#160; spooler_log "Script component spooler_exit"<br/>
end function<br/>
<br/>
function spooler_open<br/>
&#160;&#160;&#160; spooler_log "Script component spooler_open"<br/>
&#160;&#160;&#160; i = 3<br/>
end function<br/>
<br/>
function spooler_process<br/>
&#160;&#160;&#160; spooler_log "Script component spooler_process i=" &amp; i<br/>
&#160;&#160;&#160; i = i - 1<br/>
&#160;&#160;&#160; spooler_process = i > 0<br/>
end function<br/>
<br/>
&#160;&#160;&#160; ]]&gt;<br/>
&#160;&#160;&#160; &lt;/script><br/>
&lt;/component></font></p>

<p>
<br/>
		This source code is written in the <font class="mono">job.wsc</font> file and
		registered as a COM-Server with the following command:
<!--Diese Quelle wird in die Datei <font class="mono">job.wsc</font> geschrieben und
		mit folgendem Kommando als COM-Server registriert.-->
</p>

<p class="indent"><font class="mono">regsvr32 job.wsc&#160;</font></p>

<p>
		<br/>
		The server can be specified in the JobScheduler configuration with its class name:
<!--In der JobScheduler-Konfiguration kann der Server mit seinem Klassennamen angegeben	werden:-->
</p>

<p class="indent">
	<font class="mono">
                &lt;job name="component"><br/>
&#160;&#160;&#160;                    &lt;script com_class=&quot;Joacim.Component&quot;/&gt;<br/>
&#160;&#160;&#160;                    &lt;run_time once="yes"/&gt;<br/>
                &lt;/job>
	</font>
</p>

<p>
		<br/>
		or with its unique CLSID:
<!--Oder mit seiner eindeutigen CLSID:-->
</p>

<p class="indent">
	<font class="mono">
                &lt;job name="component"><br/>
&#160;&#160;&#160;                    &lt;script com_class="{F44FF458-D4DE-4cef-AA1A-CCC507346581}"/&gt;<br/>
&#160;&#160;&#160;                    &lt;run_time once="yes"/&gt;<br/>
                &lt;/job>
	</font>
</p>

		<p class="zwischentitel">Unix</p>
<!--<p class="zwischentitel">Unix</p>-->

<p>
		Building a Unix port is possible in principle, despite <span style="font-variant: small-caps">com</span>.
		The early binding would be used instead of the late binding through the IDispatch interface.
		This means that:
<!--Die Portierung auf Unix ist trotz <span style="font-variant: small-caps">com</span>
		prinzipiell möglich. Statt der späten Bindung über die Schnittstelle
		IDispatch wird die frühe Bindung verwendet. Das heißt:-->
</p>

<ul>
		<li>
			the binding is made during compilation via header files instead of using <font class="mono">IDispatch</font>.</li>
<!--<li>
			Bindung zur Compile-Zeit über Header-Dateien statt Verwendung von <font class="mono">IDispatch</font>.</li>-->
		<li>
			the <span style="font-variant: small-caps">com</span> class inherits fron the JobScheduler.Job class</li>
<!--<li>
			Die <span style="font-variant: small-caps">com</span>-Klasse erbt von der
			Klasse JobScheduler.Job</li>-->
		<li>
			all requests are implemented.
			Requests are no longer optional.
			(The error code <font class="mono">E_NOTIMPL</font> can be returned)</li>
<!--<li>
			Sie implementiert alle Aufrufe. Die Aufrufe sind nicht mehr optional
			(Fehlercode <font class="mono">E_NOTIMPL</font> kann zurückgegeben werden)</li>-->
		<li>
			Depending on the available resources, the Delphi 
			<span style="font-variant: small-caps">com</span> support may or may not be usable. 
			Should Delphi support not be available, 
			then direct <span style="font-variant: small-caps">com</span> requests will be used instead.
			This means that the return of an error message will be coded with <font class="mono">SetErrorInfo()</font>.</li>
<!--<li>Die <span style="font-variant: small-caps">com</span>-Unterstützung von
			Delphi kann möglichweise nicht verwendet werden, wenn sie zuviel voraussetzt.
			Stattdessen werden die <span style="font-variant: small-caps">com</span>-Aufrufe
			direkt verwendet. Für die Job-Implementierung heißt das, dass die Rückgabe
			einer Fehlermeldung mit dem Aufruf <font class="mono">SetErrorInfo()</font>
			codiert wird.</li>-->
		<li>
			the (shared object) module will not be registered, but will be directly specified using 
			<font class="mono">&lt;script filename=&quot;</font>...<font class="mono">&quot;/&gt;</font>.</li>
<!--<li>
			Das Modul (shared object) wird nicht registriert, sondern direkt mit <font class="mono">&lt;script
			filename=&quot;</font>...<font class="mono">&quot;/&gt;</font> angegeben</li>-->
		<li>
			a job implementation modified for Unix will also run under windows.
			A <font class="mono">#ifdef</font> will most likely not be required. 
			The job will run more quickly because of the early binding.</li>
<!--<li>
			Die für Unix geänderte Implementierung des Jobs wird auch in Windows
			ablauffähig sein. Ein <font class="mono">#ifdef</font> wird wahrscheinlich
			nicht gebraucht. Der Job wird wegen der frühen Bindung sogar schneller laufen.</li>-->
</ul>

</description>
