<?xml version="1.0"?>
<!--$Id$        Joacim Zschimmer, Zschimmer GmbH, http://www.zschimmer.com -->

<?xml-stylesheet href="api-default_language.xsl" type="text/xsl"?>


<api.class
    name        = "Lock"
    object_name = "lock"
    base_dir    = "../"
    author      = "$Author: jz $"
    date        = "$Date: 2012-06-12 21:42:49 +0200 (Di, 12 Jun 2012) $"
>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <property name="name">
        <com>
            <com.result>
                <com.type type="BSTR"/>
            </com.result>
        </com>
        
        <title>
            The lock name
        <!--Name der Sperre-->
        </title>
        
        <description>
            <p>
                The name can only be set once and cannot be changed.
            <!--Der Name kann nur einmal gesetzt und nicht geändert werden.-->
            </p>
            <p>
                See also <scheduler_element name="lock" attribute="name"/>.
            <!--Siehe auch <scheduler_element name="lock" attribute="name"/>.-->
            </p>
        </description>

        <messages>
            <message level="error" code="SCHEDULER-243"/>
            <message level="error" code="SCHEDULER-417"/>
        </messages>
    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <property name="max_non_exclusive">
        <com>
            <com.result>
                <com.type type="int"/>
            </com.result>
        </com>

        <title>
            Limitation of non-exclusive allocation
        <!--Begrenzung der nicht-exklusiven Belegungen-->
        </title>

        <description>
            The default setting is unlimited 
            (2<sup><span style="font-size: 6pt;">31</span></sup>-1),
            which means that with
            <scheduler_element name="lock.use" attribute="exclusive" value="no"/>
            any number of non-exclusive tasks can be started
            (but only one exclusive task).
        <!--Die Voreinstellung ist unbegrenzt 
            (2<sup><span style="font-size: 6pt;">31</span></sup>-1),
            es können also mit
            <scheduler_element name="lock.use" attribute="exclusive" value="no"/>
            beliebig viele nicht-exklusive Tasks gestartet werden
            (aber nur eine exklusive).-->
            <p>
                The number cannot be smaller than the number of non-exclusive allocations.
            <!--Die Zahl kann nicht kleiner sein als die Zahl der nicht-exklusiven Belegungen.-->
            </p>
            <p>
                See also <scheduler_element name="lock" attribute="max_non_exclusive"/>.
            <!--Siehe auch <scheduler_element name="lock" attribute="max_non_exclusive"/>.-->
            </p>
        </description>

        <messages>
            <message level="error" code="SCHEDULER-887"/>
        </messages>
    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <method name="remove">
        <com>
        </com>
        
        <title>
            Removes a lock
        <!--Entfernt die Sperre-->
        </title>

        <description>
            <p>
                A lock can only be removed when it is not active - that is, it has not been allocated to a task and 
                it is not being used by a job (<scheduler_element name="lock.use"/>).
            <!--Die Sperre kann nur gelöscht werden, wenn sie von keiner Task belegt und von keinem Job gebraucht (<scheduler_element name="lock.use"/>) wird.-->
            </p>
            <p>
                See also <scheduler_element name="lock.remove"/>.
            <!--Siehe auch <scheduler_element name="lock.remove"/>.-->
            </p>
        </description>

        <example programming_language="javax.script">
            <pre>spooler.locks().lock( "my_lock" ).remove();</pre>
        </example>

		<example programming_language="powershell">
            <pre>$spooler.locks().lock( "my_lock" ).remove()</pre>
        </example>

        <example programming_language="javascript">
            <pre>spooler.locks.lock( "my_lock" ).remove();</pre>
        </example>

        <example programming_language="perl">
            <pre>$spooler->locks->lock( 'my_lock' )->remove();</pre>
        </example>
        
        <messages>
            <message code="SCHEDULER-401" level="error"/>
            <message code="SCHEDULER-410" level="error"/>
            <message code="SCHEDULER-411" level="error"/>
            <message code="SCHEDULER-861" level="info"/>
        </messages>
    </method>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <description>
        <p>
            See also <scheduler_element name="lock" attribute="name"/>.
        <!--Siehe auch <scheduler_element name="lock" attribute="name"/>.-->
        </p>
    </description>

    <example programming_language="javax.script">
        <pre>
var locks = spooler.locks();
var lock = locks.create_lock();
lock.set_name("my_lock");
locks.add_lock( lock );</pre>
    </example>
	
	 <example programming_language="powershell">
        <pre>
$locks = $spooler.locks()
$lock = $locks.create_lock()
$lock.set_name("my_lock")
$locks.add_lock( $lock )</pre>
    </example>

    <example programming_language="javascript">
        <pre>var locks = spooler.locks;
var lock = locks.create_lock();
lock.name = "my_lock";
locks.add_lock( lock );</pre>
    </example>

    <example programming_language="perl">
        <pre>my $locks = $spooler->locks;
my $lock = $locks->create_lock();
$lock->LetProperty( 'name', 'my_lock' );
$locks->add_lock( $lock );</pre>
    </example>

</api.class>
