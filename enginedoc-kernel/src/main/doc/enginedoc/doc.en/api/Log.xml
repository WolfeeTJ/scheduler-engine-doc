<?xml version="1.0"?>
<!-- $Id$ -->

<?xml-stylesheet href="api-default_language.xsl" type="text/xsl"?>


<api.class
    name        = "Log"
    object_name = "spooler_log"
    base_dir    = "../"
    author      = "$Author: jz $"
    date        = "$Date: 2012-06-12 21:42:49 +0200 (Di, 12 Jun 2012) $"
>


<method name="log">
    <com>
        <com.parameter name="level">
            <com.type type="int"/>
        </com.parameter>

        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>
    <title>
        Writes in the log file with the specified level.
    </title>
</method>


<method name="error">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Error Message (Level 1)
    <!--Fehlermeldung (Level 1)-->
    </title>
    
    <description>
        <p>
            A job stops after a task has ended, should an error message have been written in the task log 
            (<scheduler_method class="Job_impl" property="spooler_log"/>) 
            and 
            <scheduler_element name="job" attribute="stop_on_error" value="no"/> 
            not have been set.
        <!--Wenn die Fehlermeldung ins Task-Protokoll (<scheduler_method class="Job_impl" property="spooler_log"/>) geschrieben wird
            und nicht <scheduler_element name="job" attribute="stop_on_error" value="no"/> eingestellt ist,
            stoppt der Job nach Ende der Task.-->
        </p>
    </description>
</method>


<method name="warn">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Warning (Level 2)
    <!--Warnung (Level 2)-->
    </title>
</method>


<method name="info">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Information message (Level 0)
    <!--Informationsmeldung (Level 0)-->
    </title>
</method>


<method name="debug">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -1)
    <!--Debug-Meldung (Level -1)-->
    </title>
</method>


<method name="debug1">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -1)
    <!--Debug-Meldung (Level -1)-->
    </title>
</method>


<method name="debug2">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -2)
    <!--Debug-Meldung (Level -2)-->
    </title>
</method>


<method name="debug3">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -3)
    <!--Debug-Meldung (Level -3)-->
    </title>
</method>


<method name="debug4">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -4)
    <!--Debug-Meldung (Level -3)-->
    </title>
</method>


<method name="debug5">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -5)
    <!--Debug-Meldung (Level -5)-->
    </title>
</method>


<method name="debug6">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -6)
    <!--Debug-Meldung (Level -6)-->
    </title>
</method>


<method name="debug7">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -7)
    <!--Debug-Meldung (Level -7)-->
    </title>
</method>


<method name="debug8">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -8)
    <!--Debug-Meldung (Level -8)-->
    </title>
</method>


<method name="debug9">
    <com>
        <com.parameter name="line">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <title>
        Debug message (level -9)
    <!--Debug-Meldung (Level -9)-->
    </title>
</method>


<method name="log_file">
    <com>
        <com.parameter name="path">
            <com.type type="BSTR"/>
        </com.parameter>
    </com>

    <java>
        <java.parameter name="path">
            <java.type type="java.io.File"/>
        </java.parameter>
    </java>

    <java>
        <java.parameter name="path">
            <com.type type="BSTR"/>
        </java.parameter>
    </java>

    <title>
        Adds the content of a file to the log file
    <!--Protokolliert den Inhalt der Datei-->
    </title>

    <description>
        <p>
            Log the content of a file with level 0 (info).
            An error occurring whilst accessing the file is logged as a warning.
        <!--Protokolliert den Inhalt der Datei mit Level 0 (info).
            Ein Fehler beim Zugriff auf die Datei wird als Warnung protokolliert.-->
        </p>
        <p>
            Note that when executed on a remote computer with 
            <scheduler_element name="process_class" attribute="remote_scheduler"/>
            the file is read from the JobScheduler's file system and not that of the task.
        <!--Bei Ausführung auf einem entfernten Rechner mit <scheduler_element name="process_class" attribute="remote_scheduler"/>
            wird die Datei vom Dateisystem des Schedulers, nicht der Task, gelesen.-->
        </p>
    </description>
</method>


<property name="mail">
    <com>
        <com.result>
            <com.type class="Mail"/>
        </com.result>
    </com>

    <title>
        E-mail settings are made in the <code>Mail</code> Object
    <!--Im <code>Mail</code>-Objekt können Sie Einstellungen zur eMail vornehmen-->
    </title>
</property>


<property name="mail_on_error" setting="mail_on_error">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>
    <title>
        Sends an e-mail should a job error occur. Errors are caused by the
        <scheduler_method class="Log" method="error"/> 
        method or by any exceptions that have not been caught by a job.
    </title>
    <description>
        Content of the e-mail is the error message.
        The log file is sent as an attachment.
    </description>
</property>


<property name="mail_on_warning" setting="mail_on_warning">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>
    <title>
        Sends an e-mail should a job warning occur. Warnings are caused by the
        <scheduler_method class="Log" method="warn"/> method.
    </title>
    <description>
        The warning forms the content of the e-mail.
        The log file is sent as an attachment.
    </description>
</property>


<property name="mail_on_success" setting="mail_on_success">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>
    <title>
        Sends an e-mail should a job terminate successfully. 
    </title>
    <description>
        The success message forms the content of the e-mail.
        The log file is sent as an attachment.
    </description>
</property>


<property name="mail_on_process" setting="mail_on_process">
    <com>
        <com.result>
            <com.type type="int"/>
        </com.result>
    </com>
    <title>
        Sends an e-mail should a job have successfully processed the number of steps specified. 
        Steps are caused by the <scheduler_method class="Job_impl" method="spooler_process"/> methods:
    </title>
    <description>
        Content of the e-mail is the success message.
        The log file is sent as an attachment.
    </description>
</property>


<property name="level" setting="log_level" title="Threshhold for Log Output">
<!--
<property name="level" setting="log_level" title="Schwelle für Protokollausgaben">-->
    <com>
        <com.result>
            <com.type type="int"/>
        </com.result>
    </com>

    <description>
        <p>
            Only messages above the level specified will be given out.
        <!--Nur Meldungen ab dem Level werden ausgegeben.-->
        </p>
        <p>
            The meanings of the numerical values are:
        <!--Dabei bedeutet die numerische Angabe:-->
        </p>
        <div style="margin-top: 1ex; margin-left: 4ex">
            <table cellspacing="0" cellpadding="0">
                <tr>
                    <td style="padding-right: 1ex">-9 to -2:</td>
                <!--<td style="padding-right: 1ex">-9 bis -2:</td>-->
                    <td>
                        <code>debug9</code> to <code>debug2</code>
                    <!--<code>debug9</code> bis <code>debug2</code>-->
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">-1:</td>
                    <td>
                        <code>debug</code>
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">0:</td>
                    <td>
                        <code>info</code>
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">1:</td>
                    <td>
                        <code>warn</code>
                    </td>
                </tr>
                <tr>
                    <td style="padding-right: 1ex">2:</td>
                    <td>
                        <code>error</code>
                    </td>
                </tr>
            </table>
        </div>
    </description>
</property>



<property name="filename" access="read">
    <com>
        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <title>
        Log file name
    <!--Dateiname des Protokolls-->
    </title>
</property>



<property name="new_filename">
    <com>
        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <title>
        A new name for the log file
    <!--Neuer Dateiname fürs Protokoll-->
    </title>

    <description>
        Sets the name of the log file.
        The JobScheduler copies a log into this file after a log has been made.
        This file is then available to other applications.
    <!--Setzt den Dateinamen fürs Protokoll.
        Wenn das Protokoll geschlossen wird, kopiert der JobScheduler es in diese Datei.
        Die Datei steht dann der Anwendung zur Verfügung.-->
    </description>
</property>


<!--
<property name="collect_within">
    <com>
        <com.result>
            <com.type type="VARIANT"/>
        </com.result>
    </com>
</property>


<property name="collect_max">
    <com>
        <com.result>
            <com.type type="VARIANT"/>
        </com.result>
    </com>
</property>
-->


<property name="mail_it" access="write">
    <com>
        <com.result>
            <com.type type="bool"/>
        </com.result>
    </com>

    <title>
        Force dispatch
    <!--Versand erzwingen-->
    </title>

    <description>
        <p>
            If this property is set to <code>true</code>,
            then a log will be sent after a task has ended, 
            independently of the following settings:<br/>
        <!--Bei <code>true</code> wird das Protokoll bei Task-Ende
            verschickt unabhängig von den Einstellungen-->
            <scheduler_method class="Log" property="mail_on_error"/>,
            <scheduler_method class="Log" property="mail_on_warning"/>,
            <scheduler_method class="Log" property="mail_on_success"/>,
            <scheduler_method class="Log" property="mail_on_process"/> and
        <!--<scheduler_method class="Log" property="mail_on_process"/> und-->
            <scheduler_method class="Log" property="mail_on_error"/>.
        </p>
    </description>
</property>


<property name="last_error_line" access="read">
    <com>
        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <title>
        The last output line with level 2 (error)
    <!--Die zuletzt mit Level 2 (error) ausgegebene Zeile-->
    </title>
</property>


<property name="last" access="read">
    <com>
        <com.parameter name="level">
            <com.type type="VARIANT">
                <com.type type="int"/>
                <com.type type="BSTR"/>
            </com.type>
        </com.parameter>

        <com.result>
            <com.type type="BSTR"/>
        </com.result>
    </com>

    <java>
        <java.parameter name="level">
            <com.type type="int"/>
        </java.parameter>

        <java.result>
            <com.type type="BSTR"/>
        </java.result>
    </java>

    <java>
        <java.parameter name="level">
            <com.type type="BSTR"/>
        </java.parameter>

        <java.result>
            <com.type type="BSTR"/>
        </java.result>
    </java>

    <title>
        The last output with the level specified
    <!--Letzte Ausgabe des angegebenen Levels-->
    </title>

</property>


<method name="start_new_file">
    <com/>

    <title>
        Only for the main log file: closes the current log file and starts a new one
    <!--Nur fürs Hauptprotokoll: Schließt das bisherige und beginnt ein neues Protokoll-->
    </title>
</method>


<title>
    Logging
<!--Prookollierung-->
</title>

<description>
    <p>
        The <scheduler_method class="Job_impl" property="spooler_log"/> method
        can be used in a job or in the JobScheduler start script with
        the methods described here.
    <!--In einem Job oder im Scheduler-Skript stellt
        <scheduler_method class="Job_impl" property="spooler_log"/>
        die hier beschriebenen Methoden bereit.-->
    </p>

    <h3>Notification by e-mail</h3>
<!--<h3>eMail-Versand</h3>-->
    <p>
        The JobScheduler can send a log file after a task has been completed per e-mail.
        The following properties define in which cases this should occur.
    <!--Am Ende einer Task kann der JobScheduler das Task-Protokoll per eMail versenden.
        In es versendet werden soll, geben diese Eigenschaften an:-->
    </p>
    <ul>
        <li><scheduler_method class="Log" property="mail_on_error"/>,</li>
        <li><scheduler_method class="Log" property="mail_on_warning"/>,</li>
        <li><scheduler_method class="Log" property="mail_on_process"/>,</li>
        <li><scheduler_method class="Log" property="mail_on_success"/> and</li>
    <!--<li><scheduler_method class="Log" property="mail_on_success"/> und</li>-->
        <li><scheduler_method class="Log" property="mail_it"/></li>
    </ul>
    <p>
        Only the end of a task - and not the end of an order - 
        (i.e. <scheduler_method class="Job_impl" method="spooler_process"/>)
        can initiate the sending of e-mails.
        However, see <scheduler_method class="Task" method="end"/>.
    <!--Nur das Ende der Task, nicht das Ende einer Auftragsausführung
        (also <scheduler_method class="Job_impl" method="spooler_process"/>)
        führt zum eMail-Versand.
        Siehe aber <scheduler_method class="Task" method="end"/>.-->
    </p>
    <p>
        The <scheduler_method class="Log" property="mail"/> method makes the 
        <scheduler_method class="Mail"/> object available,
        which in turn addresses the mails.
    <!--<scheduler_method class="Log" property="mail"/> stellt ein
        <scheduler_method class="Mail"/>-Objekt bereit,
        das die Adressierung übernimmt.-->
    </p>
</description>

<example programming_language="java">
    <pre>spooler_log.info( "Something for the Log" );

spooler_log.set_mail_on_warning( true );
spooler_log.mail().set_from   ( "scheduler@company.com" );
spooler_log.mail().set_to     ( "admin@company.com" );
spooler_log.mail().set_subject( "Task ended" );</pre>
</example>

<example programming_language="javax.script">
    <pre>spooler_log.info( "Something for the Log" );

spooler_log.set_mail_on_warning( true );
spooler_log.mail().set_from( "scheduler@company.com" );
spooler_log.mail().set_to( "admin@company.com" );
spooler_log.mail().set_subject( "Task ended" );</pre>
</example>

<example programming_language="powershell">
    <pre>$spooler_log.info( "Something for the Log" )

$spooler_log.set_mail_on_warning( $true )
$spooler_log.mail().set_from( "scheduler@company.com" )
$spooler_log.mail().set_to( "admin@company.com" )
$spooler_log.mail().set_subject( "Task ended" )</pre>
</example>

<example programming_language="javascript">
    <pre>spooler_log.info( "Something for the Log" );

spooler_log.mail_on_warning = true;
spooler_log.mail.from    = "scheduler@company.com";
spooler_log.mail.to      = "admin@company.com";
spooler_log.mail.subject = "ended";</pre>
</example>

<example programming_language="perl">
    <pre>$spooler_log->info( "Something for the Log" );

$spooler_log->LetProperty( 'mail_on_warning', 1 );
$spooler_log->mail->LetProperty( 'from', 'scheduler@company.com' );
$spooler_log->mail->LetProperty( 'to', 'admin@company.com' );
$spooler_log->mail->LetProperty( 'subject', 'ended' );</pre>
</example>

</api.class>
