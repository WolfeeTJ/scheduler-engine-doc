<?xml version="1.0"?>
<!-- $Id$ -->

<?xml-stylesheet href="api-default_language.xsl" type="text/xsl"?>


<api.class
    xmlns:xsi                     = "http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation = "../scheduler_doc.xsd"

    name        = "Web_service_request"
    object_name = "web_service_request"
    base_dir    = "../"
    author      = "$Author: jz $"
    date        = "$Date: 2012-06-12 21:42:49 +0200 (Di, 12 Jun 2012) $"
>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <property name="url" access="read">
        <com>
            <com.result>
                <com.type type="BSTR"/>
            </com.result>
        </com>

        <title>
            Uniform Resource Locator
        </title>

        <description>
            <p>
                <code>url = "http://" + header( "Host" ) + </code><i>url_path</i>
            </p>
        </description>
    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <property name="header" access="read">
        <com>
            <com.result>
                <com.type type="BSTR"/>
                <description>
                    Returns <code>""</code> in event of an unrecognized entry.
                <!--Für einen unbekannten Eintrag wird <code>""</code> geliefert-->
                </description>
            </com.result>

            <com.parameter name="name">
                <com.type type="BSTR"/>
                <description>
                    Case is not relevant.
                <!--Die Großschreibung spielt keine Rolle.-->
                </description>
            </com.parameter>
        </com>

        <title>
            Header Entries
        <!--Eintrag im Kopf-->
        </title>

        <description>
            <p>
            </p>
        </description>

        <example programming_language="javax.script">
            <pre>spooler_log.info( "Content-Type: " + spooler_task.order().web_service_operation().request().header( "Content-Type" ) );</pre>
        </example>
		
		<example programming_language="powershell">
            <pre>$spooler_log.info( "Content-Type: " + $spooler_task.order().web_service_operation().request().header( "Content-Type" ) )</pre>
        </example>

        <example programming_language="javascript">
            <pre>spooler_log.info( "Content-Type: " + spooler_task.order.web_service_operation.request.header( "Content-Type" ) );</pre>
        </example>
		
        <example programming_language="perl">
            <pre>$spooler_log->info( 'Content-Type: ' . $spooler_task->order->web_service_operation->request->header( 'Content-Type' ) );</pre>
        </example>

    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->


    <property name="content_type" access="read">
        <com>
            <com.result>
                <com.type type="BSTR"/>
            </com.result>
        </com>

        <title>
            Content Type (without parameters)
        <!--Content-Type (ohne Parameter)-->
        </title>

        <description>
            <p>
                Returns the <code>Content-Type:</code> header entry, without parameters - e.g. <code>"text/plain"</code>.
            <!--Liefert den Kopfeintrag <code>Content-Type:</code> ohne Parameter, z.B. <code>"text/plain"</code>.-->
        </p>
        </description>
    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <property name="charset_name" access="read">
        <com>
            <com.result>
                <com.type type="BSTR"/>
            </com.result>
        </com>

        <title>
            Character Set
        <!--Zeichencodierung-->
        </title>

        <description>
            <p>
                Returns the <code>charset=</code> parameter from the <code>Content-Type:</code> header entry.
            <!--Liefert den Parameter <code>charset=</code> aus dem Kopfeintrag <code>Content-Type:</code>.-->
            </p>
        </description>

        <example programming_language="javax.script">
            <pre>var request = spooler_task.order().web_service_operation().request();

spooler_log.info( request.header( "Content-Type" ) );   // ==> text/xml; charset=utf-8
spooler_log.info( request.content_type() );             // ==> text/xml
spooler_log.info( request.charset_name() );             // ==> utf-8</pre>
        </example>
		
		<example programming_language="powershell">
            <pre>$request = $spooler_task.order().web_service_operation().request()

$spooler_log.info( $request.header( "Content-Type" ) )   # ==> text/xml; charset=utf-8
$spooler_log.info( $request.content_type() )             # ==> text/xml
$spooler_log.info( $request.charset_name() )             # ==> utf-8</pre>
        </example>


        <example programming_language="javascript">
            <pre>var request = spooler_task.order.web_service_operation.request;

spooler_log.info( request.header( "Content-Type" ) );   // ==> text/xml; charset=utf-8
spooler_log.info( request.content_type );               // ==> text/xml
spooler_log.info( request.charset_name );               // ==> utf-8</pre>
        </example>
		
        <example programming_language="perl">
            <pre>my $request = $spooler_task->order->web_service_operation->request;

$spooler_log->info( $request->header( 'Content-Type' ) );    # ==> text/xml; charset=utf-8
$spooler_log->info( $request->content_type );                # ==> text/xml
$spooler_log->info( $request->charset_name );                # ==> utf-8</pre>
        </example>

    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <property name="string_content" access="read">
        <com>
            <com.result>
                <com.type type="BSTR"/>
            </com.result>
        </com>

        <title>
            Payload as Text
        <!--Nutzdaten als Text-->
        </title>

        <description>
            <p>
                The character set to be used is taken from the <code>charset</code> parameter in the 
                <code>headers("Content-Type")</code> 
                (see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">HTTP/1.1 14.17 Content-Type</a>).
                ISO-8859-1 will be used as default, should this parameter not be specified.
            <!--Die Zeichen-Codierung wird dem Parameter <code>charset</code> aus <code>headers( "Content-Type" )</code> entnommen
                (siehe <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">HTTP/1.1 14.17 Content-Type</a>).
                Fehlt der Parameter, wird ISO-8859-1 angenommen.-->
            </p>
            <p>
                The following character sets are recognized:
            <!--Folgende Zeichen-Coderierungen (Charset) werden erkannt:-->
            </p>
            <ul>
                <li>ISO-8859-1</li>
                <li>UTF-8 (only on Windows systems and restricted to the ISO-8859-1 characters)</li>
            <!--<li>UTF-8 (nur Windows und beschränkt auf den Zeichenvorrat von ISO-8859-1)</li>-->
            </ul>
            <p>
                See also <scheduler_method class="Web_service_request" property="binary_content"/>.
            <!--Siehe auch <scheduler_method class="Web_service_request" property="binary_content"/>.-->
            </p>
        </description>
    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <property name="binary_content" access="read">
        <com/>
        
        <java>
            <java.result>
                <java.type type="byte[]"/>
            </java.result>
        </java>

        <title>
            Payload as a Byte Array (Java only)
        <!--Nutzdaten als Byte-Array (nur Java)-->
        </title>

        <description>
            <p>
                This property is only available under Java.
            <!--Die Eigenschaft steht nur unter Java zur Verfügung.-->
            </p>
            <p>
                The <code>( "Content-Type" )header field</code> is used to inform the client how binary content is to be interpreted 
                (see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">HTTP/1.1 14.17 Content-Type</a>) and 
                <scheduler_method class="Web_service_request" property="charset_name"/>).
            <!--Wie der binäre Inhalt zu interpretieren ist, 
                sollte der Client in im Header-Feld <code>Content-Type</code> mitgeteilt haben
                (siehe <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">HTTP/1.1 14.17 Content-Type</a> und 
                <scheduler_method class="Web_service_request" property="charset_name"/>).-->
            </p>
        </description>
    </property>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <description>
        <p>
            See <scheduler_method class="Web_service_operation"/>.
        <!--Siehe <scheduler_method class="Web_service_operation"/>.-->
        </p>
    </description>

</api.class>
