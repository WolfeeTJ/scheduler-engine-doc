<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>
<!--$Id$-->

<xml_element name     = "job_chain"
             title    = "Job chain"
             category = "Configuration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author: jz $"
             date     = "$Date: 2012-06-12 21:25:54 +0200 (Di, 12 Jun 2012) $">

    <scheduler_keyword keyword="Job chain"/>

    <xml_parent_elements>
        <xml_parent_element name="job_chains"/>
    </xml_parent_elements>

    <xml_attributes>
        <xml_attribute name="name" type="name">
            <description>
                <p>
                    The name of the job chain. 
                    Note that a job chain can only be defined once.
                <!--Name der Jobkette. 
                    Jede Jobkette kann nur einmal definiert werden.-->
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="visible" type="yes|no|never" initial="yes">
            <description>
                <p>
                    <code>visible="no"</code> and <code>visible="never"</code> make a job chain invisible in the results of 
                    <scheduler_element name="show_job_chains"/> and
                    <scheduler_element name="show_state"/>.
                <!--<code>visible="no"</code> und <code>visible="never"</code> lässt die Jobkette im Ergebnis von
                    <scheduler_element name="show_job_chains"/> und
                    <scheduler_element name="show_state"/> unsichtbar.-->
                </p>
                <p>
                    The JobScheduler makes a job chain visible as soon as an order has been added to the chain.
                <!--Der JobScheduler setzt die Jobkette sichtbar, sobald ein Auftrag eingereiht wird.-->
                </p>
            </description>
        </xml_attribute>

        
        <xml_attribute name="orders_recoverable" type="yes|no" initial="yes">
            <description>
                <p>
                    <code>orders_recoverable="yes"</code>
                </p>
                <div class="indent">
                    <p style="margin-top: 0pt;">
                        When the JobScheduler has been configured to store orders in the database,
                        as soon as an order is added to a job's order queue it will be also be stored in the database.
                        After the order has completed the job chain, it will be deleted from the database
                    <!--Der JobScheduler hält die Aufträge in der Datenbank.
                        Sobald ein Auftrag in die Auftragswarteschlange eines Jobs eingereiht wird,
                        speichert der JobScheduler ihn auch in der Datenbank.
                        Wenn der Auftrag die Jobkette durchlaufen hat, wird er aus der Datenbank entfernt.-->
                    </p>
                    <p>
                        The JobScheduler loads orders from the database on starting and setting up the job chains.
                        See <scheduler_method class="Spooler" method="add_job_chain"/>.
                    <!--Beim Einrichten der Jobkette (beim Start des Schedulers) lädt der JobScheduler die Aufträge aus der Datenbank.
                        Siehe <scheduler_method class="Spooler" method="add_job_chain"/>.-->
                    </p>
                    <p>
                        This attribute does not function when the JobScheduler has been configured to work without a database - 
                        see <scheduler_ini_entry file="factory.ini" section="spooler" entry="db"/>.
                    <!--Wirkungslos, wenn der JobScheduler ohne Datenbank arbeitet, siehe <scheduler_ini_entry file="factory.ini" section="spooler" entry="db"/>.-->
                    </p>
                </div>
                <p>
                    <code>orders_recoverable="no"</code>
                </p>
                <p class="indent" style="margin-top: 0pt;">
                    The JobScheduler does not store orders in or load orders from a database.
                <!--Der JobScheduler hält nicht die Aufträge in der Datenbank und lädt sie auch nicht daraus.-->
                </p>
                <p>
                    See <a href="../datenbank.xml">Database</a>.
                <!--Siehe <a href="../datenbank.xml">Datenbank</a>.-->
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="distributed" type="yes|no" initial="no">
            <description>
                <p>
                    Only works when specified in conjunction with <scheduler_option name="distributed-orders"/>
                    and causes orders to be distributed over more than one JobScheduler.
                <!--Wirkt nur mit der Kommandozeilenoption <scheduler_option name="distributed-orders"/>
                    und lässt die Aufträge von mehreren Schedulern verteilt ausführen.-->
                </p>
                <p>
                    <code>distributed="no"</code> prevents a job chain from being processed by more than one JobScheduler.
                    Instead, causes a job chain to be processed on the one JobScheduler,
                    as if it were in a non-distributed environment.
                    Note that in this situation, the name of the job chain <i>must</i> be unique in the cluster
                    (Note that this is not checked by the JobScheduler).
                <!--<code>distributed="no"</code> lässt die Jobkette nicht verteilt,
                    sondern nur auf diesem JobScheduler ausführen,
                    wie bei einem nicht-verteiltem Scheduler.
                    Der Name der Jobkette <i>muss</i> in diesem Fall im Cluster eindeutig sein
                    (das wird nicht geprüft).-->
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="title" type="String">
            <description>
                <p>
                    A job chain can also be given a title.
                <!--Der Jobkette kann ein Titel gegeben werden.-->
                </p>
                <p>
                    See also <scheduler_method class="Job_chain" property="title"/>.
                <!--Siehe auch <scheduler_method class="Job_chain" property="title"/>.-->
                </p>
            </description>
        </xml_attribute>

				<!-- JS-538 -->
        <xml_attribute name="max_orders" type="postive integer" initial="99999" >
            <description>
                <p>
                In general an unlimited number of orders for a job_chain could ran simultaneously. To declare the attribute max_orders it is 
                possible to limit this number. E.g. <i>max_orders='1'</i> let run the job_chain exclusively for one order. A new order for this job_chain
                can only run, if the first order was finished. 
                <!--
                Grundsätzlich können von einer Jobkette beliebig viele Instanzen (durch verschiedene Order gestartet) parallel laufen. Mit 
                max_orders kann diese Anzahl begrenzt werden. max_orders='1' bedeutet z.B., dass eine order diese Jobkette exklusiv für sich 
                beansprucht. Eine weitere order für diese Jobkette können erst ausgeführt werden, wenn die erste order beendet worden ist.
                -->
                </p>
                <p>
                    The number of simultaneous orders for a job_chain is not limited, if this attribute is not set.
                    <!-- Fehlt diese Angabe, ist die Anzahl der parallel laufenden Order einer Jobkette nicht begrenzt. -->
                </p>
                <p>
                    <b>This attribute take only effect, if the order starts with the first node of the job chain.</b>
                    <!-- <b>Diese Einstellung gilt nur für order, die mit dem ersten Knoten der Jobkette starten.</b> -->
                </p>
            </description>
        </xml_attribute>


    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="file_order_source" multiple="yes"/>
        <xml_child_element name="job_chain_node" multiple="yes"/>
        <xml_child_element name="file_order_sink" multiple="yes"/>
        <xml_child_element name="job_chain_node.job_chain" multiple="yes"/>
        <xml_child_element name="job_chain_node.end" multiple="yes"/>
    </xml_child_elements>


    <description>
        <p>
            Adds a new job chain (see the <scheduler_method class="Job_chain"/> class). 
        <!--Führt eine neue Jobkette (siehe Klasse <scheduler_method class="Job_chain"/>) ein. -->
        </p>
        <p>
            See <a href="../order.xml">Orders</a>,
            <scheduler_method class="Job_chain"/>,
            <scheduler_method class="Spooler" method="create_job_chain"/> 
            and <scheduler_method class="Spooler" method="add_job_chain"/> 
        <!--Siehe <a href="../order.xml">Aufträge</a>,
            <scheduler_method class="Job_chain"/>,
            <scheduler_method class="Spooler" method="create_job_chain"/> 
            und <scheduler_method class="Spooler" method="add_job_chain"/> -->
        </p>
        
        <h3>Simple Job Chains - a Chain of Jobs</h3>
    <!--<h3>Einfache Jobkette - Eine Kette von Jobs</h3>-->
        <p>
            Simple job chains contain jobs and are described using the 
        <!--Einfache Jobketten enthalten Jobs und werden mit den XML-Elementen -->
            <scheduler_element name="job_chain_node"/>,
            <scheduler_element name="file_order_source"/> and
        <!--<scheduler_element name="file_order_source"/> und-->
            <scheduler_element name="file_order_sink"/>
            XML elements.
        <!--beschrieben.-->
        </p>

        <h3>Superordinate Job Chains - a Chain of Job Chains</h3>
    <!--<h3>Übergeordente Jobkette - Eine Kette von Jobketten</h3>-->
        <p>
            Superordinate job chains refer to other job chains and are described using the
            <scheduler_element name="job_chain_node.job_chain"/>.
            <scheduler_element name="job_chain_node.end"/> XML elements.
            A superordinate job chain can only contain simple job chains.
        <!--Übergeordnete Jobketten verweisen auf andere Jobketten und werden mit den XML-Elementen
            <scheduler_element name="job_chain_node.job_chain"/>.
            <scheduler_element name="job_chain_node.end"/> beschrieben.
            Die aufgeführten Jobketten müssen einfache Jobketten sein.-->
        </p>
        <p>
            Superordinate job chains cannot be used in combination with distributed orders.
        <!--Übergeordnete Jobketten arbeiten nicht mit verteilten Aufträgen.-->
        </p>
    </description>

    <example>
<pre>&lt;job_chains>
    &lt;job_chain name="Chain_A">
<!--&lt;job_chain name="Kette_A">-->
        &lt;job_chain_node state=  "1" job="job_a" next_state=  "2" error_state="999" />            
        &lt;job_chain_node state=  "2" job="job_b" next_state="100" error_state="999" />            
        &lt;job_chain_node state="100" />
        &lt;job_chain_node state="999" />
    &lt;/job_chain>
&lt;/job_chains></pre>

This is the same as the following JobScheduler script:
<!--Das ist dasselbe wie folgendes Scheduler-Skript:-->

<pre>&lt;script language="javascript">&lt;![CDATA[
    var job_chain = spooler.create_job_chain();
        job_chain.name = "Chain_A";
    <!--job_chain.name = "Kette_A";-->
        job_chain.add_job( "job_a", 1,   2, 999 );
        job_chain.add_job( "job_b", 2, 100, 999 );
        job_chain.add_end_state( 100 );
        job_chain.add_end_state( 999 );
    spooler.add_job_chain( job_chain );
]]&gt;&lt;/script></pre>
    </example>

    <example>
<pre>&lt;job_chains>
    &lt;job_chain name="superchain">
        &lt;job_chain_node.job_chain state="A" job_chain="job_chain_a" 
                                  next_state="B" error_state="ERROR" />            
        &lt;job_chain_node.job_chain state="B" job_chain="job_chain_b" 
                                  next_state="OK" error_state="ERROR" />            
        &lt;job_chain_node.end state="OK" />
        &lt;job_chain_node.end state="ERROR" />
    &lt;/job_chain>
&lt;/job_chains></pre>
    </example>
    
    <behavior_with_xml_element element="base" allowed="no">
        <description>
            <code>&lt;job_chain name="</code>Name<code>"></code> can be added with unique name.
        <!--<code>&lt;job_chain name="</code>Name<code>"></code> mit verschiedenen Namen können hinzugefügt werden.-->
        </description>
    </behavior_with_xml_element>
</xml_element>
