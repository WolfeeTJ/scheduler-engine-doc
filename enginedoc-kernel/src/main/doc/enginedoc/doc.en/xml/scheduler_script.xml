<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id$-->
         <!--title    = "JobScheduler Skript"-->

<xml_element name     = "scheduler_script"
             title    = "JobScheduler Script"
             category = "Configuration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author: jz $"
             date     = "$Date: 2012-06-12 21:25:54 +0200 (Di, 12 Jun 2012) $">

    <scheduler_keyword keyword="JobScheduler Script"/>
<!--<scheduler_keyword keyword="JobScheduler Skript"/>-->

    <xml_parent_elements>
        <xml_parent_element name="config"/>
    </xml_parent_elements>


    <xml_attributes>
        <xml_attribute name="name" type="Name" intial="scheduler">
            <description>
                <p>
                    More than one JobScheduler script can be specified,
                    as long as each script has a unique name.
                <!--Mehrere Scheduler-Skripte können angegeben werden,
                    wenn jedem ein eigener Name gegeben wird.-->
                </p>
            </description>
        </xml_attribute>

        <xml_attribute name="ordering" type="number">
            <description>
                <p>
                    JobScheduler scripts with a lower value of the <scheduler_element name="script" attribute="ordering"/> attribute are called first.
                    The opposite is true when the JobScheduler is being ended:
                    <scheduler_method class="Job_impl" method="spooler_exit"/> is called in reverse order.
                <!--JobScheduler Skripte mit kleinerem <code>ordering</code> werden vorranging aufgerufen.
                    Umgekehrt beim Beenden des JobSchedulers:
                    <scheduler_method class="Job_impl" method="spooler_exit"/> werden nachrangig aufgerufen.-->
                </p>
            </description>
        </xml_attribute>
    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="script"/>
    </xml_child_elements>


    <description>
        <p>
            This script makes the <code>spooler</code> and <code>spooler_log</code> variables available.
        <!--Dem Skript stehen die Variablen <code>spooler</code> und <code>spooler_log</code> zur Verfügung.-->
        </p>
        <p>
            <scheduler_method class="Job_impl" method="spooler_init"/> 
            is called when the JobScheduler is started (before jobs are started).
        <!--wird beim Start des JobSchedulers (vor dem Start der Jobs) aufgerufen.-->
        </p>
        <p>
            <scheduler_method class="Job_impl" method="spooler_exit"/> 
            is called after the JobScheduler has ended (after all jobs have ended).
        <!--wird bei Beendigung des JobSchedulers (nach Beendigung aller Jobs) aufgerufen.-->
        </p>
    </description>

   
</xml_element>
