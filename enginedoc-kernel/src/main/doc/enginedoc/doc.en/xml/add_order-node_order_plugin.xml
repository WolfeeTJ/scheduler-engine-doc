<?xml version="1.0" encoding="utf-8"?>
<!--DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"-->
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id$-->

<xml_element name     = "add_order" 
             parent_page = "../xml_commands.xml"
             category = "Command"
             title    = "Adds an order"
             base_dir = "../"
             author   = "$Author: ap $"
             date     = "$Date: 2015-11-06 17:25:54 +0200 (Do, 06 Nov 2015) $">


    <description>
        <p>
            Adds a new order for a job chain.
            This order will be started immediately.
        </p>
        <p>
            This element is derived from a different namespace
            https://www.sos-berlin.com/repository/scheduler/1.9/scheduler.xsd
            that includes support for the NodeOrderPlugin.
        </p>
        <p>
            The <code>&lt;add_order&gt;</code> element is used with the <code>&lt;on_return_code&gt;</code>
            element to add an order in the event of a job task ending with a return code matching one of those specified in the <code>&lt;on_return_code&gt;</code> element's <code>return_code</code> attribute.
        </p>
         <p>
            Note that the execution of an <code>&lt;add_order&gt;</code> element is not logged in the log file of the current current (i.e. originating) order.
        </p>
        <h3>Requirements</h3>
        <ul>
            <li>
                The <i>NodeOrderPlugin</i> has been delivered as part of all JobScheduler releases since 1.9.0.
            </li>
            <li>
                The <i>NodeOrderPlugin</i> must also be activated in the <code>scheduler.xml</code> file as follows:
                <pre>    &lt;plugins&gt;
        &lt;plugin java_class="com.sos.scheduler.engine.plugins.nodeorder.NodeOrderPlugin"/&gt;
        …
    &lt;/plugins&gt;
</pre>            </li>
        </ul>
    </description>

    <xml_parent_elements>
        <xml_parent_element name="on_return_code"/>
    </xml_parent_elements>

    <xml_attributes>

        <xml_attribute name="xmlns" type="namespace" title="Must be set to https://jobscheduler-plugins.sos-berlin.com/NodeOrderPlugin">
            <description>
                <p>
                    The namespace of the plugin used. This attribute must be specified.
                </p>
            </description>
        </xml_attribute>

        
        <xml_attribute name="job_chain" type="name">
            <description>
                <p>
                    The name of the job chain in which the order is being processed.
                </p>
            </description>
        </xml_attribute>

        
        <xml_attribute name="id" type="id">
            <description>
                <p>
                    The identification for orders generated by the <code>&lt;add_order&gt;</code> element.<br/>
                    (<i>Note that this parameter should not be set to <code>id</code>, which is a reserved word in XML.</i>)<br/>
                    Example:
                </p>
                <ul>
                    <li><code>&lt;add_order id="myOrderId" job_chain=""/&gt;</code></li>
                </ul>
                <p>
                    If the id attribute is not specified then orders generated by the <code>&lt;add_order&gt;</code> element inherit the <code>id</code> of the originating order.
                </p>
                <p>
                    Orders generated by the <code>&lt;add_order&gt;</code> element that are to be executed on job chains other than the originating job chain do not have to have an <code>id</code> attribute.
                </p>
                <p>
                    Orders generated by the <code>&lt;add_order&gt;</code> element for the originating job chain (i.e. creating a loop) have to have an <code>id</code> attribute.
                </p>
                <p>
                    Orders <code>id</code> attributes can be generated using variables. For example:
                </p>
                <ul>
                    <li><code>&lt;add_order id="${ORDER_ID}.1" job_chain=""/&gt;</code></li>
                </ul>
            </description>
        </xml_attribute>
        
    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="params-node_order_plugin">
            <description>
                <h3 style="margin-top: 1em">Using &lt;param&gt;</h3>
                <p>
                    The parameter element can be used when <code>&lt;add_order&gt;</code> 
                    is included in <scheduler_element name="on_return_codes" child="on_return_code"/>:
                </p>
                <ul>
                    <li>
                        Parameters specified as children of this element are forwarded to orders generated by the <code>&lt;add_order&gt;</code> element.
                    </li>
                    <li>
                        In addition the parameters of the executing order are automatically forwarded to the new order.
                    </li>
                </ul>
            </description>

            <example>
                <pre>
&lt;<a href="xml/on_return_codes.xml">on_return_codes</a>&gt;
    &lt;<a href="xml/on_return_code.xml">on_return_code</a>  return_code="0"&gt;
        &lt;add_order id="myOrderId" xmlns="https://jobscheduler-plugins.sos-berlin.com/NodeOrderPlugin" job_chain="Chain_B"&gt;
            &lt;<a href="xml/params.xml">params</a> &gt;
                &lt;<a href="xml/param.xml">param</a>  name="parameterName" value="parameterValue"/&gt;
            &lt;/params&gt;
        &lt;/add_order&gt;
    &lt;/on_return_code&gt;
&lt;/on_return_codes&gt;
                </pre>
            </example>
        
        </xml_child_element>

    </xml_child_elements>
    
    <example>
        <pre>
&lt;<a href="xml/on_return_codes.xml">on_return_codes</a>&gt;
    &lt;<a href="xml/on_return_code.xml">on_return_code</a>  return_code="0"&gt;
        &lt;add_order id="myOrderId" xmlns="https://jobscheduler-plugins.sos-berlin.com/NodeOrderPlugin" job_chain="Chain_B"&gt;
            &lt;<a href="xml/params.xml">params</a> &gt;
                &lt;<a href="xml/param.xml">param</a>  name="parameterName" value="parameterValue"/&gt;
            &lt;/params&gt;
        &lt;/add_order&gt;
    &lt;/on_return_code&gt;
&lt;/on_return_codes&gt;
        </pre>
    </example>
</xml_element>
