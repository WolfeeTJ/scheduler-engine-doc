<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id$-->

<!--         title    = "Programm-Code"-->

<xml_element name     = "script" 
             title    = "Program code"
             category = "Configuration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author: jz $"
             date     = "$Date: 2012-06-12 21:25:54 +0200 (Di, 12 Jun 2012) $">

    <xml_parent_elements>
        <xml_parent_element name="config">
            <description>
                <p>
                    See <scheduler_element name="scheduler_script"/> in <scheduler_element name="config"/> below.
                <!--Siehe unten <scheduler_element name="scheduler_script"/> in <scheduler_element name="config"/>.-->
                </p>
            </description>
        </xml_parent_element>
        
        <xml_parent_element name="scheduler_script">
            <description>
                <scheduler_keyword keyword="Start Script"/>
            <!--<scheduler_keyword keyword="Startskript"/>-->
                <p>
                    The script is the start script.
                    The <code>spooler</code> and <code>spooler_log</code> variables are available to the script.
                <!--Das Skript ist das Startskript.
                    Dem Skript stehen die Variablen <code>spooler</code> und <code>spooler_log</code> zur Verfügung.-->
                </p>
                <p>
                    <scheduler_method class="Job_impl" method="spooler_init"/> is called as the JobScheduler is started (before the start of the job).
                <!--<scheduler_method class="Job_impl" method="spooler_init"/> wird beim Start des Schedulers (vor dem Start der Jobs) aufgerufen.-->
                </p>
                <p>
                    <scheduler_method class="Job_impl" method="spooler_exit"/> is called after the JobScheduler has ended (after all jobs have ended).
                <!--<scheduler_method class="Job_impl" method="spooler_exit"/> wird bei Beendigung des Schedulers (nach Beendigung aller Jobs) aufgerufen.-->
                </p>
            </description>
        </xml_parent_element>
        
        <xml_parent_element name="job">
            <description>
                <p>
                    The script is a job script.
                <!--Das Skript ist ein Job-Skript.-->
                </p>
            </description>        
        </xml_parent_element>

        <xml_parent_element name="monitor"/>
    </xml_parent_elements>
    

    <xml_attributes>
        <xml_attribute name="language" type="language">
            <description>
                <p>
                    The language of the program code.
                    Is not used in conjunction with the <code>com_class</code>.
                    Case is not important here.
                <!--Sprache des Programm-Codes.
                    Wird nicht zusammen mit dem Attribute <code>com_class</code> verwendet.
                    Die Großschreibung spielt keine Rolle.-->
                </p>
                
                <dl>
                    <dt><code>language="java"</code></dt>
                    <dd>
                        The class name is defined with the <code>java_class</code> attribute.
                        The program code for the java class can be entered as text in <code>&lt;script&gt;</code> - 
                        the JobScheduler then compiles the code using <code>javac</code>.
                    <!--Den Name der Klasse geben Sie mit dem Attribut <code>java_class</code> an.
                        Sie können den Programm-Code der Java-Klasse als Text in <code>&lt;script></code> angegeben.
                        Der JobScheduler kompiliert den Code mit <code>javac</code>.-->
                    </dd>
                    
                    <dt><code>language="JavaScript"</code></dt>
                    <dd>
                        <a href="../script_language_javascript.xml">JavaScript</a> 
                         is available via the SpiderMonkey scripting engine in Windows and UNIX.
                    <!--<a href="../script_language_javascript.xml">JavaScript</a> 
                        liegt in der Implementierung von Mozilla Spidermonkey vor und wird mit dem JobScheduler ausgeliefert.-->
                    </dd>
                    <dt><code>language="JScript"</code> and <code>"VBScript"</code></dt>
                    <dd>
                        <a href="../script_language_javascript.xml">JScript</a> 
                        and VBScript are present in Windows with their own scripting engines.
                    <!--JavaScript und VBScript sind in Windows vorhandene Sprachen (Scripting engines).-->
                    </dd>
                    
                    <dt><code>language="PerlScript"</code></dt>
                    <dd>
                        PerlScript is used in Windows when it is installed. 
                        Perl is used directly in UNIX.
                    <!--In Windows wird PerlScript verwendet, wenn es installiert ist. 
                        In UNIX wird Perl direkt verwendet.-->
                    </dd>
                    
                    <dt><code>language="shell"</code></dt>
                    <dd>
                        On Windows systems the JobScheduler forwards the script to <code>cmd.exe</code>.
                        (the script is saved as a temporary <code>.cmd</code> file).
                    <!--Unter Windows übergibt der JobScheduler das Skript an <code>cmd.exe</code>
                        (das Skript wird in einer temporären Datei mit der Namensendung <code>.cmd</code> gespeichert).-->
                    </dd>
                    <dd>
                        The script is called in the same way as an <i>executable</i> file on UNIX Systems.
                    <!--Unter UNIX wird das Skript aufgerufen wie ein <i>executable</i>.-->
                    </dd>
                    <dd>
                        Behaviour is the same as <scheduler_element name="process"/>.
                    <!--Das Verhalten ist dasselbe wie von <scheduler_element name="process"/>.-->
                    </dd>
                    <dd>
                        The setting cannot be used when executed on a remote computer using 
                        <scheduler_element name="process_class" attribute="remote_scheduler"/>.
                     <!--Die Einstellung kann nicht verwendet werden bei Ausführung auf einem entfernten Rechner mit <scheduler_element name="process_class" attribute="remote_scheduler"/>.-->
                    </dd>
                </dl>
            </description>
        </xml_attribute>

        <xml_attribute name="com_class" type="com_class_name">
            <description>
                <p>
                    The name of a COM-Class (Windows only).
                    The COM class can implement the spooler_open(), spooler_process() etc. methods.
                <!--Name einer COM-Klasse (nur Windows).
                    Die COM-Klasse kann die Methoden spooler_open(), spooler_process() etc. bereitstellen.-->
                </p>
            </description>
        </xml_attribute>

        <xml_attribute name="filename" type="file_name">
    <!--<xml_attribute name="filename" type="filename">-->
            <description>
                <p>
                    Should the name of the dll which implements the COM class not be registered, 
                    then its name can be given here, in conjunction with the <code>com_class</code> attribute.
                <!--Zusammen mit dem Attribut <code>com_class</code> können Sie hier den Namen der DLL angeben,
                    die die COM-Klasse implementiert, falls diese nicht registriert ist.-->
                </p>
            </description>
        </xml_attribute>

        <xml_attribute name="java_class" type="java_class_name">
            <description>
                <p>
                    Should a job be implemented as a Java class, then the class name must be defined using this attribute.
                 <!--Wenn der Job als Java-Klasse realisiert ist, dann geben Sie mit diesem Attribut deren Namen an.-->
                </p>
                <p>
                    A name specified in the basic configuration can be overwritten here.
                    The next task (running in a separate process) uses a new class.
                <!--Ein in einer Basiskonfiguration angegebener Name kann überschrieben werden.
                    Die nächste Task (die in einem eigenen Prozess läuft) verwendet die neue Klasse.-->
                </p>
            </description>
            
            <messages>
                <!--message level="error" code="SCHEDULER-398"/-->
            </messages>
        </xml_attribute>
        
        <xml_attribute name="java_class_path" type="java_class_path">
            <description>
                <p>
                    Allow a job-specific Class-Path.
                </p>
                <p>
                	This java classpath will be prepend to the java classpath customized in the factory.ini
                </p>
            </description>

        </xml_attribute>

<!--        
        <xml_attribute name="recompile" type="yes_no" initial="yes">
            <description>
                <p>
                    Wenn die Java-Klasse als Quell-Code im Element <code>&lt;script</code> enthalten ist, kann mit recompile="
                </p>
            </description>
        </xml_attribute>
-->
<!--        
        <xml_attribute name="process_class" type="prozessklasse">
            <description>
                Gibt den Namen der Prozessklasse an, in der der Programm-Code laufen soll. Siehe <scheduler_element name="process_classes"/>.
            </description>
        </xml_attribute>
-->
<!--
        <xml_attribute name="separate_process" type="yes_no">
            <description>
                <p>
                </p>
            </description>
        </xml_attribute>
-->

    <!--<xml_attribute name="use_engine" type="scope" initial="task">
            <description>
                <p>
                    Only <code>use_engine="task"</code> is allowed.
                    Nur <code>use_engine="task"</code> ist möglich.
                </p>
            </description>
        </xml_attribute>-->
        
    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="include"/>
    </xml_child_elements>
    
    
    <description>
        <p>
            The program code to be executed is specified here, either direct as text, 
            or indirect as a reference to binary code.
        <!--Hier wird der auszuführende Programm-Code angegeben, 
            entweder direkt als Text oder indirekt als Verweis auf Binär-Code. -->
        </p>
        <p>
            Source code can be included as text in <code>&lt;script&gt;</code>. 
            It can be included in <code>&lt;[CDATA[</code>&#160; and&#160; <code>]]&gt;</code>.
        <!--<code>&lt;script></code> kann den Quell-Code als Text enthalten. 
            Er kann in <code>&lt;![CDATA[</code>&#160; und&#160; <code>]]&gt;</code> 
            eingeschlossen sein.-->
        </p>
    </description>


    <messages>
        <!--message level="error" code="SCHEDULER-400"/-->
    </messages>


    <behavior_with_xml_element element="base" complete="yes">
        <description>
        <!--<p>
                Attributes (e.g. <code>language=</code>) cannot be changed after the JobScheduler has been started.
                Only the script itself can be changed.
                Nach dem Start des Schedulers können die Attribute (z.B. <code>language=</code>) nicht mehr geändert werden.
                Nur das Skript selbst ist änderbar.
            </p>-->
            <p>
                The script can be added to a script defined in the a basic configuration.
            <!--Das Skript wird dem in einer Basiskonfiguration definierten Skript angehängt.-->
            </p>
        </description>
    </behavior_with_xml_element>
    
</xml_element>
