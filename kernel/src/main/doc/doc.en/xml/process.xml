<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>
<!--$Id$-->

<!--         title    = "Externes Programm (alternativ zu &lt;script&gt;)" -->

<xml_element name     = "process" 
             title    = "External programs (as an alternative to &lt;script&gt;)" 
             category = "Configuration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author: jz $" 
             date     = "$Date: 2012-06-12 21:25:54 +0200 (Di, 12 Jun 2012) $">

    <xml_parent_elements>
        <xml_parent_element name="job">
        </xml_parent_element>
    </xml_parent_elements>
    
    <xml_attributes>
        <xml_attribute name="file" type="filename" subst_env="yes" title="Path of the Executing Program">
    <!--<xml_attribute name="file" type="filename" subst_env="yes" title="Pfad des auszuführenden Programms">-->
            <description>
                <p>
                    The name of the file containing the program or script
                    with which the process is to be started.
                    The file must be capable of being executed by the operating system.
                <!--Name der Datei, die das Programm oder das Skript enthält,
                    mit dem der Prozess gestartet werden soll.
                    Die Datei muss vom Betriebssystem ausführbar sein.-->
                </p>
            </description>
        </xml_attribute>
        
        <xml_attribute name="param" type="text" subst_env="yes" title="Parameter Line">
    <!--<xml_attribute name="param" type="text" subst_env="yes" title="Parameterzeile">-->
            <description>
                <p>
                    Defines the parameter string which will be assigned to the process.
                    Task parameters can be called using 
                    <code>$</code><i>name</i> or 
                    <code>${</code><i>name</i><code>}</code>
                    in addition to environment variables.
                <!--Gibt den Parameterstring an, der dem Prozess übergeben wird.
                    Außer den Umgebungsvariablen werden können auch die Task-Parameter mit
                    <code>$</code><i>name</i> oder 
                    <code>${</code><i>name</i><code>}</code>
                    abgerufen werden.-->
                </p>
                <p>
                    Variables specified in <scheduler_element name="environment"/> 
                    have no influence on the substitution.
                <!--Die in <scheduler_element name="environment"/> aufgeführten Variablen
                    haben keinen Einfluss auf die Ersetzung.-->
                </p>
            </description>
            <example>
                <pre><![CDATA[<process file="/tmp/test.cmd" param="ONE=$ONE TWO=$TWO HOME=$HOME LOG=$LOG PATH=$PATH">
    <environment>
        <variable name="PATH" value="$PATH;/extra"/>   <!-- not used for param="" -->
    </environment>
</process>]]></pre>
                <pre>var params = spooler.create_variable_set();
params.value( "ONE" ) = "1";
params.value( "TWO" ) = "2";
spooler.job( "process" ).start( params );
</pre>
            </example>
        </xml_attribute>


        <xml_attribute name="log_file" type="file_name" subst_env="yes">
    <!--<xml_attribute name="log_file" type="dateiname" subst_env="yes">-->
            <description>
                <p>
                    The Job Scheduler includes the content of this file in its protocol after the process has ended.
                <!--Der Scheduler übernimmt nach Prozessende den Inhalt dieser Datei in sein Protokoll.-->
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="ignore_error" type="yes|no" initial="no">
            <description>
                <p>
                    An exit code ≠ 0 causes a job error when <code>ignore_error="no"</code> (the default setting).
                    The job is then stopped.
                <!--Bei <code>ignore_error="no"</code> (Voreinstellung) führt ein Exit code ≠ 0 zu einem Jobfehler.
                    Der Job wird gestoppt.-->
                </p>
                <p>
                    An exit code ≠ 0 does not cause a job error when <code>ignore_error="yes"</code>.
                <!--Bei <code>ingore_error="yes"</code> führt ein Exit code ≠ 0 nicht zu einem Jobfehler.-->
                </p>
            </description>
        </xml_attribute>

        <xml_attribute name="ignore_signal" type="yes|no" initial="no">
            <description>
                <p>
                    Functions on Unix systems.
                    (An interrupted process returns a Exit code on Windows.
                    This code is, however, recognized by <code>ignore_error=""</code>.)
                <!--Wirkt nur unter Unix.
                    (Unter Windows liefert ein abgebrochener Prozess einen Exit code, der von <code>ignore_error=""</code> berücksichtigt wird.)-->
                </p>
                <p>
                    A signal (i.e. a process termination, such as <code>kill</code>) leads to a job error
                    when the (default) setting <code>ignore_signal="no"</code> is used.
                    The job is then stopped.
                <!--Bei <code>ignore_signal="no"</code> (Voreinstellung) führt ein Signal 
                    (d.h. ein Abbruch des Prozesses, z.B. durch <code>kill</code>) 
                    zu einem Jobfehler.
                    Der Job wird gestoppt.-->
                </p>
                <p>
                    However the setting <code>ignore_signal="yes"</code> causes a signal not to result in a job error.
                <!--Bei <code>ignore_signal="yes"</code> führt ein Signal nicht zu einem Jobfehler.-->
                </p>
                <p>
                    <code>ignore_signal="yes"</code> has the same effect as 
                    <scheduler_element name="job" attribute="ignore_signals" value="all"/>.
                <!--<code>ignore_signal="yes"</code> hat dieselbe Wirkung wie 
                    <scheduler_element name="job" attribute="ignore_signals" value="all"/>.-->
                </p>
            </description>
        </xml_attribute>

    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="environment">
            <description>
                <p>
                    The environment variables listed here are carried over to the new process together with 
                    the environment variables for the Job Scheduler processes.
                    The environment variables listed here overwrite the Scheduler process environment variables having the same name.
                <!--Die hier aufgeführten Umgebungsvariablen werden zusammen mit den Umgebungsvariablen des Scheduler-Prozesses
                    dem neuen Prozess übergeben.
                    Erste überschreiben letztere gleichen Namens.-->
                </p>
            </description>
        </xml_child_element>
    </xml_child_elements>


    <description>
        <p>
            A process is mounted at the start of a job - that is at the start of a task.
            The Job Scheduler monitors this process and closes the task after the process has ended.
            An exit code other than 0 will be interpreted as an error.
            The exit code is the result of the task and is to be found in <code>task.result</code>.
        <!--Beim Start des Jobs, also zu Beginn einer Task, wird ein Prozess eingerichtet. 
            Der Spooler überwacht den Prozess und beendet die Task nachdem der Prozess sich beendet hat. 
            Ein Exit code verschieden von 0 wird als Fehler interpretiert. 
            Der Exit code ist das Ergebnis der Task und steht in <code>task.result</code> bereit.-->
        </p>
        
        <!--p>
            The element cannot be used on a remote computer with <scheduler_element name="process_class" attribute="remote_scheduler"/>.-->
        <!--Das Element kann nicht verwendet werden bei Ausführung auf einem entfernten Rechner mit <scheduler_element name="process_class" attribute="remote_scheduler"/>.-->
        <!--/p-->

        <h3>Exit Codes</h3>
    <!--<h3>Exit-Code</h3>-->
        <ul>
            <li>
                All exit codes other than 0 are interpreted as errors (<scheduler_message code="SCHEDULER-280"/>).
            <!--Ein Exit-Code verschieden von 0 wird als Fehler (<scheduler_message code="SCHEDULER-280"/>) interpretiert.-->
            </li>
            <li>
                On Unix systems, the Job Scheduler the error code of a process terminated with a signal to the
                negative value of the signal.
            <!--Unter Unix setzt der Scheduler den Exit-Codes eines mit Signal abgebrochenen Prozesses auf den negativen Wert des Signals.-->
            </li>
            <li>
                The exit code is made available in the <scheduler_method class="Task" property="exit_code"/> method
                and determines the subsequent commands to be carried out.
                See <code>&lt;job></code><scheduler_element name="commands" attribute="on_exit_code"/> for further information.
            <!--Der Exit-Code wird in <scheduler_method class="Task" property="exit_code"/> bereitgestellt
                und entscheidet über die anschließend auszuführenden Kommandos.
                Siehe hierzu <code>&lt;job></code><scheduler_element name="commands" attribute="on_exit_code"/>.-->
                <!--Der Exit code ist das Ergebnis der Task und steht in <code>task.result</code> bereit.-->
            </li>
        </ul>

        
        <h3>Environment Variables</h3>
    <!--<h3>Umgebungsvariablen</h3>-->
        <scheduler_keyword keyword="Environment Variables"/>
    <!--<scheduler_keyword keyword="Umgebungsvariablen"/>-->

        <p>
            The Job Scheduler hands over the following environment variables:
        <!--Der Scheduler übergibt eine Umgebungsvariable:-->
        </p>
        
        <dl>
            <dt>
                <scheduler_keyword keyword="SCHEDULER_HOST"/>
                <code>SCHEDULER_HOST</code>
            </dt>
            <dd>
                Is the same as <scheduler_method class="Spooler" property="hostname"/>.
            <!--Dasselbe wie <scheduler_method class="Spooler" property="hostname"/>.-->
            </dd>

            <dt>
                <scheduler_keyword keyword="SCHEDULER_JOB_CHAIN"/>
                <code>SCHEDULER_JOB_CHAIN</code>
            </dt>
            <dd>
                For an order controlled job (<scheduler_element name="job" attribute="order" value="yes"/>)
                <scheduler_method class="Task" object="spooler_task" property="order"/><code>.</code><scheduler_method class="Order" object="" property="job_chain"/>.<scheduler_method class="Job_chain" object="" property="name"/>.
            <!--Bei einem auftragsgesteuerten Job (<scheduler_element name="job" attribute="order" value="yes"/>)
                <scheduler_method class="Task" object="spooler_task" property="order"/><code>.</code><scheduler_method class="Order" object="" property="job_chain"/>.<scheduler_method class="Job_chain" object="" property="name"/>.-->
            </dd>

            <dt>
                <scheduler_keyword keyword="SCHEDULER_JOB_NAME"/>
                <code>SCHEDULER_JOB_NAME</code>
            </dt>
            <dd>
                The job name
                <!--Dasselbe wie 
                <scheduler_method class="Task" object="spooler_task" property="job"/>.<scheduler_method class="Job" object="" property="name"/>.-->
            </dd>

            <dt>
                <scheduler_keyword keyword="SCHEDULER_ORDER_ID"/>
                <code>SCHEDULER_ORDER_ID</code>
            </dt>
            <dd>
                For an order controlled job (<scheduler_element name="job" attribute="order" value="yes"/>)
                <scheduler_method class="Task" object="spooler_task" property="order"/><code>.</code><scheduler_method class="Order" object="" property="id"/>.
            <!--Bei einem auftragsgesteuerten Job (<scheduler_element name="job" attribute="order" value="yes"/>)
                <scheduler_method class="Task" object="spooler_task" property="order"/><code>.</code><scheduler_method class="Order" object="" property="id"/>.-->
            </dd>

            <dt>
                <scheduler_keyword keyword="SCHEDULER_SUPERVISOR_HOST"/>
                <code>SCHEDULER_SUPERVISOR_HOST</code>
            </dt>
            <dd>
                The computer name from <scheduler_element name="config" attribute="supervisor"/>
            <!--Rechnername aus <scheduler_element name="config" attribute="supervisor"/>-->
            </dd>

            <dt>
                <scheduler_keyword keyword="SCHEDULER_SUPERVISOR_PORT"/>
                <code>SCHEDULER_SUPERVISOR_PORT</code>
            </dt>
            <dd>
                Port number from <scheduler_element name="config" attribute="supervisor"/>
            <!--Portnummer aus <scheduler_element name="config" attribute="supervisor"/>-->
            </dd>

            <dt>
                <scheduler_keyword keyword="SCHEDULER_TASK_ID"/>
                <code>SCHEDULER_TASK_ID</code>
            </dt>
            <dd>
                The same as <scheduler_method class="Task" object="spooler_task" property="id"/>.
            <!--Dassselbe wie <scheduler_method class="Task" object="spooler_task" property="id"/>.-->
            </dd>
            <dt>
                <scheduler_keyword keyword="SCHEDULER_TASK_TRIGGER_FILES"/>
                <code>SCHEDULER_TASK_TRIGGER_FILES</code>
            </dt>
            <dd>
                Is the same as <scheduler_method class="Task" object="spooler_task" property="trigger_files"/>.
            <!--Dasselbe wie <scheduler_method class="Task" object="spooler_task" property="trigger_files"/>.-->
            </dd>
            <dt>
                <scheduler_keyword keyword="SCHEDULER_TCP_PORT"/>
                <code>SCHEDULER_TCP_PORT</code>
            </dt>
            <dd>
                As per <scheduler_method class="Spooler" property="tcp_port"/>  or empty, when a port has not been set.
            <!--Wie <scheduler_method class="Spooler" property="tcp_port"/> oder leer, wenn kein Port festgelegt ist.-->
            </dd>

            <dt>
                <scheduler_keyword keyword="SCHEDULER_UDP_PORT"/>
                <code>SCHEDULER_UDP_PORT</code>
            </dt>
            <dd>
                As per <scheduler_method class="Spooler" property="udp_port"/> or empty, when a port has not been set.
            <!--Wie <scheduler_method class="Spooler" property="udp_port"/> oder leer, wenn kein Port festgelegt ist.-->
            </dd>
        </dl>
        
    </description>

    <messages>
        <message level="info" code="SCHEDULER-987"/>
    <!--<message level="error" code="SCHEDULER-400"/>-->
    </messages>

    <behavior_with_xml_element element="base" allowed="no"/>
</xml_element>    
