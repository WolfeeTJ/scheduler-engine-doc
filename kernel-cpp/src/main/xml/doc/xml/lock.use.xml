<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id: web_service.xml 4858 2007-02-19 17:32:03Z jz $        Joacim Zschimmer, Zschimmer GmbH, http://www.zschimmer.com -->

<xml_element name     = "lock.use"
             title    = "Deklaration einer Sperre"
             category = "Konfiguration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author: jz $"
             date     = "$Date: 2007-02-19 18:32:03 +0100 (Mo, 19 Feb 2007) $">

    <xml_parent_elements>
        <xml_parent_element name="job"/>
    </xml_parent_elements>


    <xml_attributes>
        <xml_attribute name="lock" type="name" title="Name der Sperre">
            <description>
                <p>
                    Die Sperre muss mit <scheduler_element name="lock"/> deklariert worden sein.
                </p>
            </description>
        </xml_attribute>

        <xml_attribute name="exclusive" type="yes|no" initial="yes" title="Exklusive oder nicht-exklusive Belegung ist möglich">
            <description>
                <p>
                    <code>exclusive="yes"</code> ist voreingestellt. 
                    Damit wird die Sperre exklusiv gesetzt und nur eine Task wird gestartet. 
                    Alle anderen Jobs, die dieselbe Sperre angegeben, 
                    werden in eine Warteschlange eingereiht.
                    Jobs mit <code>exclusive="yes"</code> werden vor Jobs mit <code>exclusive="no"</code> gestartet.
                </p>
                <p>
                    <code>exclusive="no"</code> sperrt nur gegen exklusive Verwendung (<code>exclusive="yes")</code>.
                    Task mit <code>exclusive="no"</code> schließen nur Tasks mit <code>exclusive="yes"</code> aus.
                    Die Zahl von mit <code>exclusive="no"</code> insgesamt laufender Tasks kann 
                    mit <scheduler_element name="lock" attribute="max_non_exclusive"/> begrenzt werden.
                </p>
                
            </description>
        </xml_attribute>
    </xml_attributes>


    
    <behavior_with_xml_element element="base" complete="yes"/>
    
    
    <description>
        <p>
            Siehe auch <scheduler_element name="locks"/> und <scheduler_element name="lock"/>.
        </p>
    </description>
    
    <messages>
        <message code="SCHEDULER-161" level="error"/>
        <message code="SCHEDULER-407" level="error"/>
        <message code="SCHEDULER-408" level="error"/>
        <message code="SCHEDULER-855" level="info"/>
        <message code="SCHEDULER-856" level="info"/>
        <message code="SCHEDULER-857" level="info"/>
        <message code="SCHEDULER-858" level="info"/>
        <message code="SCHEDULER-860" level="info"/>
    </messages>

    <example>
        <pre>&lt;locks>
    &lt;lock name="my_file"/>
&lt;/lock>    
        
&lt;job name="my_file_reader" tasks="3">
    &lt;lock.use lock="my_file" exclusive="no"/>
    …
&lt;/job>    

&lt;job name="my_other_file_reader">
    &lt;lock.use lock="my_file" exclusive="no"/>
    …
&lt;/job>    

&lt;job name="my_file_writer">
    &lt;lock.use lock="my_file"/>
    …
&lt;/job></pre>
        
        <p>
            Die Jobs <code>my_file_reader</code> und <code>my_other_file_reads</code> belegen die Sperre nicht-exklusiv 
            und können gleichzeitig mit mehreren Tasks laufen.
        </p>
        <p>
            Der Job <code>my_file_writer</code> setzt die Sperre exklusiv und startet nur, 
            wenn kein anderer Job läuft.
            Der Job kann einen Datenbestand ändern und sich darauf verlassen, 
            dass währenddessen keiner der beiden anderen Jobs den Datenbestand liest.
        </p>
        <p>
            Siehe auch
            <scheduler_method class="Task" object="spooler_task" method="try_hold_lock"/>.
        </p>
        
    </example>
</xml_element>
